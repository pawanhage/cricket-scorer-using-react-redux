{"version":3,"sources":["constants.js","utils/common.js","utils/cricketUtils.js","components/RunsVsOversBarChart.js","components/Partnerships.js","components/InningDetails.js","components/ComparisionChart.js","components/FullScorecard.js","redux/index.js","components/MatchDetails.js","components/CurrentScore.js","components/WicketDetails.js","components/UpdateScore.js","App.js","reportWebVitals.js","configureStore.js","index.js"],"names":["WICKET","RUN_OUT","CAUGHT_BY","LBW","BOWLED","STUMPED","HIT_WICKET","FIELD_OBSTRUCT","WIDE","NO_BALL","LEG_BYES","BYES","PENALTY_RUNS","NO_BALL_OFF_BAT","YET_TO_BAT","OUT","NOT_OUT_ON_STRIKE","NOT_OUT_ON_NON_STRIKE","ONE_DAY_MATCH","IN_PROGRESS","COMPLETE","RUNS_OPTIONS","label","value","disabled","EXTRAS_OPTIONS","WICKET_OPTIONS","YET_TO_START","COMPLETED","MOCK_TEAM_1","MOCK_TEAM_2","cloneDeep","source","destination","Array","isArray","forEach","element","push","key","isN","number","isNaN","formInning","battingTeam","battingTeamPlayers","bowlingTeam","bowlingTeamPlayers","totalScore","totalWickets","extras","wides","noBalls","legByes","byes","penaltyRuns","batsmen","map","player","name","status","runsScored","ballsFaced","fours","sixes","strikeRate","wicketDetails","bowlers","totalOvers","wicketsTaken","runsGiven","maiden","economy","overs","getRunsIndex","currentBall","findIndex","ball","getUpdatedBatsmanStats","batsman","runs","getRunsFromCurrentBall","isBallFacedByBatsman","extraIndex","getExtraBallIndex","runIndex","includes","Number","toFixed","getRun","console","log","reduce","acc","curr","isLegalDelivery","every","RegExp","join","test","isWicketTakenByBowler","Object","keys","some","wicketType","getUpdatedBowlerStats","bowler","tOvers","String","split","length","getTotalOverNumber","countLegalDeliveriesInOver","over","count","totalLegalDeliveries","getTotalOvers","completedOversCount","filter","details","isContinueButtonDisabledForCurrentBall","extra","whoOut","outByPlayer","calculateEconomyRateForBowler","totalRuns","balls","getUpdatedInningStats","currentInning","striker","nonStriker","totalRunsFromCurrentBall","extraBallIndex","strikerIndex","nonStrikerIndex","whoOutIndex","totalRunsInThisOver","ext","index","getExtrasFromCurrentBall","type","outBy","isWicketBall","fow","score","isOverMaiden","b","partnerships","RunsVsOversBarChart","basicData","labels","from","datasets","backgroundColor","data","class","style","height","options","maintainAspectRatio","aspectRatio","plugins","legend","color","scales","x","grid","y","beginAtZero","Partnerships","inning","className","partnership","arr","firstBatsman","secondBatsman","firstBatsmanScore","secondBatsmanScore","totalPartnership","firstBatsmanContributionInPercentage","secondBatsmanContributionInPercentage","borderBottom","display","alignItems","width","borderRight","marginLeft","InningDetails","getWicketDetailsString","fontFamily","header","maxHeight","overflowY","sort","a","order","fowJsx","wkt","fontSize","padding","textAlign","COLORS","ComparisionChart","maxOvers","innings","i","fill","borderColor","tension","radius","pointBackgroundColor","ticks","connect","state","match","currentInningIndex","activeIndex","INSERT_MATCH_DETALS","UPDATE_INNINGS","FORCE_END_OVER","END_BALL","END_INNING","RESET_LAST_BALL","START_NEXT_INNING","SET_MATCH_RESULT","getYetToBatOrRetdHurtBatsmen","getNotOutBatsmen","getStrikerBatsman","getNonStrikerBatsman","getNextPossibleBowlers","bowlerName","maxOversPerBowler","getCurrentBowler","lastOver","getCurrentOver","getTotalWickets","getCurrentInning","getLastBall","lastBall","getBowlingTeamPlayers","teams","getTotalOversCount","getCurrentRunRate","currentOvers","totalBalls","calculateCurrentRunRate","getRequiredRunRate","target","oversPerSide","totalBallsRemained","calculateRequiredRunRate","totalOversPerInning","getTotalOversPerInning","initialState","updateInnings","payload","matchReducer","action","result","dispatch","insertMatchDetails","useState","firstTeamName","setFirstTeamName","secondTeamName","setSecondTeamName","matchType","setMatchType","setTotalOvers","firstTeamPlayers","setFirstTeamPlayers","secondTeamPlayers","setSecondTeamPlayers","tossResult","setTossResult","setMaxOversPerBowler","history","useHistory","matchTypes","oversOptions","tossResultOptions","maxOversPerBowlerOptions","Math","ceil","htmlFor","id","placeholder","onChange","e","inputId","optionLabel","max","onClick","totalPlayersPerSide","setMatchDetails","matchResult","currentRunRate","requiredRunRate","strikerBatsman","nonStrikerBatsman","currentOver","currentBowler","whoWonToss","tossDecision","totalBallsFaced","lastWicketScore","float","marginTop","marginRight","clsName","lastWicket","fontWeight","suffix","SetWhoOut","useContext","WicketDetailsContext","dispatchWicketDetails","currentBatsmanOptions","SetOutByPlayer","bowlingTeamPlayersOptions","outByHeading","WicketDetails","initialWicketDetailsState","wicketDetailsReducer","createContext","batsmenYetToBatOrRetdHurt","batsmenNotOut","nextPossibleBowlers","startNextInning","setMatchResult","batsmanOnStrike","setBatsmanOnStrike","batsmanOnNonStrike","setBatsmanOnNonStrike","useReducer","wicketDetailsState","nextBowler","setNextBowler","useEffect","nextBatsman","setNextBatsman","isCurrentBatsmanOnStrike","setCurrentBatsmanOnStrike","indexOf","runsOptions","setRunsOptions","extrasOptions","setExtraOptions","wicketOptions","setWicketOptions","setRuns","newWicketOptions","wicket","setExtra","newRunsOptions","run","newExtrasOptions","setCurrentBall","splice","batsmenYetToBatOrRetdHurtOptions","batsmenNotOutOptions","nextPossibleBowlersOptions","resetBall","CurrentBallDetails","onValueChange","mode","min","Provider","getMatchResult","ChooseBatsmanAndBowler","batsmanBowlerJsx","checked","onLabel","offLabel","onIcon","offIcon","continueMatch","liveScore","visibleBottom","setVisibleBottom","src","alt","exact","path","component","MatchDetails","FullScorecard","position","top","right","icon","title","visible","onHide","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","combineReducers","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e65408d.chunk.js","sourcesContent":["export const WICKET = 'WKT';\r\nexport const RUN_OUT = 'R';\r\nexport const CAUGHT_BY = 'C';\r\nexport const LBW = 'LBW';\r\nexport const BOWLED = 'B';\r\nexport const STUMPED = 'ST';\r\nexport const HIT_WICKET = \"Hit Wicket\";\r\nexport const FIELD_OBSTRUCT = \"Field Obstruct\";\r\n\r\nexport const WIDE = 'WD';\r\nexport const NO_BALL = 'NB';\r\nexport const LEG_BYES = 'LB';\r\nexport const BYES = 'B';\r\nexport const PENALTY_RUNS = 'PEN';\r\nexport const NO_BALL_OFF_BAT = \"nb\"\r\n\r\nexport const YET_TO_BAT = 'YTB';\r\nexport const OUT = 'O';\r\nexport const RETD_HURT = 'RETD_HURT';\r\nexport const NOT_OUT_ON_STRIKE = 'OS';\r\nexport const NOT_OUT_ON_NON_STRIKE = 'ONS';\r\nexport const DID_NOT_BAT = 'DNB';\r\n\r\nexport const ONE_DAY_MATCH = 'ODM';\r\nexport const TEST_MATCH = 'TM';\r\n\r\nexport const IN_PROGRESS = 'IN_PROGRESS';\r\nexport const COMPLETE = 'COMPLETE';\r\n\r\nexport const RUNS_OPTIONS = [\r\n    { label: '0', value: 0, disabled: false },\r\n    { label: '1', value: 1, disabled: false },\r\n    { label: '2', value: 2, disabled: false },\r\n    { label: '3', value: 3, disabled: false },\r\n    { label: '4', value: 4, disabled: false },\r\n    { label: '5', value: 5, disabled: false },\r\n    { label: '6', value: 6, disabled: false }\r\n];\r\n\r\nexport const EXTRAS_OPTIONS = [\r\n    { label: 'Wide', value: WIDE, disabled: false },\r\n    { label: 'No Ball', value: NO_BALL, disabled: false },\r\n    { label: 'No Ball (Hit by batsman)', value: NO_BALL_OFF_BAT, disabled: false },\r\n    { label: 'Leg Bye', value: LEG_BYES, disabled: false },\r\n    { label: 'Bye', value: BYES, disabled: false },\r\n    { label: 'Penalty', value: PENALTY_RUNS, disabled: false }\r\n];\r\n\r\nexport const WICKET_OPTIONS = [\r\n    { label: \"Bowled\", value: BOWLED, disabled: false },\r\n    { label: \"LBW\", value: LBW, disabled: false },\r\n    { label: \"Catch Out\", value: CAUGHT_BY, disabled: false },\r\n    { label: \"Run Out\", value: RUN_OUT, disabled: false },\r\n    { label: \"Stump Out\", value: STUMPED, disabled: false },\r\n    { label: \"Hit Wicket\", value: HIT_WICKET, disabled: false },\r\n    { label: \"Field Obstruct\", value: FIELD_OBSTRUCT, disabled: false }\r\n];\r\n\r\nexport const YET_TO_START = 'YTS';\r\nexport const COMPLETED = 'COMPLETED';\r\n\r\nexport const MOCK_TEAM_1 = {\r\n    name: 'MI',\r\n    players: [\r\n        'Quinton de Kock',\r\n        'Rohit Sharma',\r\n        'Suryakumar Yadav',\r\n        'Ishan Kishan',\r\n        'Kieron Pollard',\r\n        'Hardik Pandya',\r\n        'Krunal Pandya',\r\n        'Jayant Yadav',\r\n        'Rahul Chahar',\r\n        'Jasprit Bumrah',\r\n        'Trent Boult'\r\n    ]\r\n}\r\n\r\nexport const MOCK_TEAM_2 = {\r\n    name: 'CSK',\r\n    players: [\r\n        'Ruturaj Gaikwad',\r\n        'Faf du Plessis',\r\n        'Suresh Raina',\r\n        'Moeen Ali',\r\n        'Ambati Rayudu',\r\n        'Ravindra Jadeja',\r\n        'MS Dhoni',\r\n        'Sam Curran',\r\n        'Lungi Ngidi',\r\n        'Deepak Chahar',\r\n        'Shardul Thakur'\r\n    ]\r\n}\r\n","export const cloneDeep = (source, destination = {}) => {\r\n    if (Array.isArray(source)) {\r\n        destination = [];\r\n        source.forEach(element => {\r\n            destination.push(cloneDeep(element));\r\n        });\r\n    } else {\r\n        for (let key in source) {\r\n            if (Array.isArray(source[key])) {\r\n                source[key].forEach(element => {\r\n                    destination[key].push(element);\r\n                });\r\n            } else if (typeof source[key] === 'object') {\r\n                destination[key] = {};\r\n                cloneDeep(source[key], destination[key]);\r\n            } else {\r\n                destination[key] = source[key];\r\n            }\r\n        }\r\n    }\r\n    return destination;\r\n}\r\n\r\nexport const isN = (number) => {\r\n    return !isNaN(number);\r\n}\r\n","import {\r\n    CAUGHT_BY,\r\n    COMPLETE,\r\n    IN_PROGRESS,\r\n    NOT_OUT_ON_NON_STRIKE,\r\n    NOT_OUT_ON_STRIKE,\r\n    NO_BALL,\r\n    RUN_OUT,\r\n    STUMPED,\r\n    WICKET,\r\n    WIDE,\r\n    YET_TO_BAT,\r\n    LEG_BYES,\r\n    BYES,\r\n    PENALTY_RUNS,\r\n    NO_BALL_OFF_BAT,\r\n    BOWLED,\r\n    LBW,\r\n    HIT_WICKET,\r\n    OUT,\r\n    YET_TO_START\r\n} from \"../constants\";\r\nimport { isN } from \"./common\";\r\n\r\nexport const formInning = (battingTeam, battingTeamPlayers, bowlingTeam, bowlingTeamPlayers) => {\r\n    return {\r\n        totalScore: 0,\r\n        totalWickets: 0,\r\n        extras: {\r\n            wides: 0,\r\n            noBalls: 0,\r\n            legByes: 0,\r\n            byes: 0,\r\n            penaltyRuns: 0\r\n        },\r\n        battingTeam: battingTeam,\r\n        bowlingTeam: bowlingTeam,\r\n        batsmen: battingTeamPlayers.map((player) => {\r\n            return {\r\n                name: player,\r\n                status: YET_TO_BAT,\r\n                runsScored: 0,\r\n                ballsFaced: 0,\r\n                fours: 0,\r\n                sixes: 0,\r\n                strikeRate: 0,\r\n                wicketDetails: null\r\n            }\r\n        }),\r\n        bowlers: bowlingTeamPlayers.map((player) => {\r\n            return {\r\n                name: player,\r\n                totalOvers: 0,\r\n                wicketsTaken: 0,\r\n                runsGiven: 0,\r\n                maiden: 0,\r\n                economy: 0\r\n            }\r\n        }),\r\n        overs: [],\r\n        status: YET_TO_START\r\n    };\r\n}\r\n\r\nexport const getUpdatedBatsmanStatus = (batsman, status) => {\r\n    return {\r\n        ...batsman,\r\n        status: status\r\n    }\r\n}\r\n\r\nexport const getRunsIndex = (currentBall) => {\r\n    return currentBall.findIndex((ball) => isN(ball));\r\n}\r\n\r\nexport const getUpdatedBatsmanStats = (batsman, currentBall) => {\r\n    let runs = getRunsFromCurrentBall(currentBall);\r\n    let isBallFacedByBatsman = true;\r\n    let extraIndex = getExtraBallIndex(currentBall);\r\n    let runIndex = getRunsIndex(currentBall);\r\n    if (extraIndex > -1) {\r\n        if (currentBall[extraIndex] === NO_BALL_OFF_BAT) {\r\n            runs = runs - 1;\r\n        } else if ([WIDE, LEG_BYES, BYES, NO_BALL, PENALTY_RUNS].includes(currentBall[extraIndex])) {\r\n            runs = 0;\r\n        }\r\n        isBallFacedByBatsman = [WIDE, NO_BALL, PENALTY_RUNS].includes(currentBall[extraIndex]) ? false : true;\r\n    }\r\n    const runsScored = batsman.runsScored + runs;\r\n    const fours = runs % 4 === 0 ? batsman.fours + (runs / 4) : batsman.fours;\r\n    const sixes = runs % 6 === 0 ? batsman.sixes + (runs / 6) : batsman.sixes;\r\n    const ballsFaced = isBallFacedByBatsman ? batsman.ballsFaced + 1 : batsman.ballsFaced;\r\n    const strikeRate = ballsFaced ? Number(((100 * runsScored) / ballsFaced).toFixed(2)) : 0;\r\n    const status = currentBall[runIndex] && currentBall[extraIndex] !== PENALTY_RUNS ? ((isN(currentBall[runIndex]) && currentBall[0] % 2 === 0) ? NOT_OUT_ON_STRIKE : NOT_OUT_ON_NON_STRIKE) : NOT_OUT_ON_STRIKE;\r\n    return {\r\n        ...batsman,\r\n        runsScored: runsScored,\r\n        ballsFaced: ballsFaced,\r\n        fours: fours,\r\n        sixes: sixes,\r\n        strikeRate: strikeRate,\r\n        status: status\r\n    }\r\n}\r\n\r\nexport const getBatsmanWicketDetails = (batsman, wicketType, bowler, outBy) => {\r\n    let newBatsmanStats = {\r\n        ...batsman,\r\n        wicketDetails: {\r\n            type: wicketType,\r\n            bowler: bowler\r\n        }\r\n    }\r\n    if (wicketType === RUN_OUT || wicketType === CAUGHT_BY || wicketType === STUMPED) {\r\n        newBatsmanStats = {\r\n            ...newBatsmanStats,\r\n            wicketDetails: {\r\n                ...newBatsmanStats.wicketDetails,\r\n                outBy: outBy\r\n            }\r\n        }\r\n        return newBatsmanStats;\r\n    }\r\n}\r\n\r\nexport const getRunsFromCurrentBall = (currentBall) => {\r\n    const getRun = (ball) => {\r\n        if (isNaN(Number(ball))) {\r\n            if (ball === WICKET) {\r\n                return 0;\r\n            } else if ([WIDE, NO_BALL, NO_BALL_OFF_BAT].includes(ball)) {\r\n                return 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        } else {\r\n            return Number(ball);\r\n        }\r\n    }\r\n    console.log('Total Runs from ball', currentBall.reduce((acc, curr) => acc = acc + getRun(curr), 0));\r\n    return currentBall.reduce((acc, curr) => acc = acc + getRun(curr), 0);\r\n}\r\n\r\nexport const isLegalDelivery = (currentBall) => {\r\n    if (Array.isArray(currentBall)) {\r\n        return currentBall.every((ball) => ball !== WIDE && ball !== NO_BALL && ball !== NO_BALL_OFF_BAT && ball !== PENALTY_RUNS);\r\n    } else if (typeof currentBall === 'string') {\r\n        return !new RegExp([WIDE, NO_BALL, NO_BALL_OFF_BAT, PENALTY_RUNS].join('|')).test(currentBall);\r\n    }\r\n}\r\n\r\nexport const getTotalOverNumber = (totalOvers) => {\r\n    let tOvers = totalOvers + 0.1;\r\n    let overs = String(tOvers).split('.');\r\n    if (overs.length > 1) {\r\n        if (overs[1] === '6') {\r\n            tOvers = Number(overs[0]) + 1;\r\n        }\r\n    }\r\n    return Number(tOvers.toFixed(1));\r\n}\r\n\r\nexport const isWicketBall = (currentBall) => {\r\n    return currentBall.some((ball) => ball === WICKET);\r\n}\r\n\r\nexport const isWicketTakenByBowler = (wicketDetails) => {\r\n    if (Object.keys(wicketDetails).some((key) => wicketDetails[key])) {\r\n        return [BOWLED, LBW, CAUGHT_BY, STUMPED, HIT_WICKET].includes(wicketDetails.wicketType);\r\n    }\r\n    return false;\r\n}\r\n\r\nexport const incrementMaidenOverCount = (bowler) => {\r\n    return {\r\n        ...bowler,\r\n        maiden: bowler.maiden + 1\r\n    }\r\n}\r\n\r\nexport const getUpdatedBowlerStats = (bowler, currentBall) => {\r\n    let runsGiven = getRunsFromCurrentBall(currentBall);\r\n    if (isLegalDelivery(currentBall)) {\r\n        const totalOvers = getTotalOverNumber(bowler.totalOvers);\r\n        if (currentBall.includes(LEG_BYES) || currentBall.includes(BYES)) {\r\n            runsGiven = 0;\r\n        }\r\n        return {\r\n            ...bowler,\r\n            totalOvers: totalOvers,\r\n            runsGiven: bowler.runsGiven + runsGiven\r\n        }\r\n    } else {\r\n        return {\r\n            ...bowler,\r\n            runsGiven: bowler.runsGiven + runsGiven\r\n        }\r\n    }\r\n}\r\n\r\nexport const getTotalRunsFromOver = (over) => {\r\n    over.reduce((totalRuns, currentBall) => {\r\n        totalRuns = getRunsFromCurrentBall(currentBall);\r\n        return totalRuns;\r\n    }, 0);\r\n}\r\n\r\nexport const countLegalDeliveriesInOver = (over) => {\r\n    let count = 0;\r\n    if (over.length) {\r\n        count = Number(over.reduce((totalLegalDeliveries, currentBall) => totalLegalDeliveries + Number(isLegalDelivery(currentBall)), 0));\r\n    }\r\n    return count;\r\n}\r\n\r\nexport const getInningsCurrentOverStats = (currentOver, currentBall) => {\r\n    const overDetails = currentOver.details.push(currentBall);\r\n    const totalRunsThisOver = getTotalRunsFromOver(overDetails);\r\n    const legalDeliveriesInOver = countLegalDeliveriesInOver(overDetails);\r\n    return {\r\n        ...currentOver,\r\n        details: overDetails,\r\n        totalRunsThisOver: totalRunsThisOver,\r\n        status: legalDeliveriesInOver === 6 ? COMPLETE : IN_PROGRESS\r\n    }\r\n}\r\n\r\nexport const getExtraBallIndex = (currentBall) => {\r\n    let index;\r\n    index = currentBall.findIndex((ball) => [WIDE, NO_BALL, LEG_BYES, BYES, PENALTY_RUNS, NO_BALL_OFF_BAT].includes(ball));\r\n    return index;\r\n}\r\n\r\nexport const getExtrasFromCurrentBall = (currentBall) => {\r\n    let extras = {\r\n        wides: 0,\r\n        noBalls: 0,\r\n        legByes: 0,\r\n        byes: 0,\r\n        penaltyRuns: 0\r\n    };\r\n    const index = getExtraBallIndex(currentBall);\r\n    const totalRunsFromCurrentBall = getRunsFromCurrentBall(currentBall);\r\n\r\n    if (index > -1) {\r\n        if (currentBall[index] === WIDE) {\r\n            extras = {\r\n                ...extras,\r\n                wides: totalRunsFromCurrentBall\r\n            }\r\n        } else if (currentBall[index] === NO_BALL || currentBall[index] === NO_BALL_OFF_BAT) {\r\n            extras = {\r\n                ...extras,\r\n                noBalls: 1\r\n            }\r\n        } else if (currentBall[index] === LEG_BYES) {\r\n            extras = {\r\n                ...extras,\r\n                legByes: totalRunsFromCurrentBall\r\n            }\r\n        } else if (currentBall[index] === BYES) {\r\n            extras = {\r\n                ...extras,\r\n                byes: totalRunsFromCurrentBall\r\n            }\r\n        } else if (currentBall[index] === PENALTY_RUNS) {\r\n            extras = {\r\n                ...extras,\r\n                penaltyRuns: totalRunsFromCurrentBall\r\n            }\r\n        }\r\n    }\r\n    return extras;\r\n}\r\n\r\n// Count Total Overs in inning so far, returns \"overs.balls\"\r\nexport const getTotalOvers = (overs) => {\r\n    const completedOversCount = overs.filter((over) => over.status === COMPLETE).length;\r\n    const inProgressOverCount = overs.length - completedOversCount;\r\n    let totalOvers = completedOversCount;\r\n    if (inProgressOverCount > 0) {\r\n        totalOvers = totalOvers + Number('0.' + String(countLegalDeliveriesInOver(overs[overs.length - 1].details)));\r\n    }\r\n    return Number(totalOvers);\r\n}\r\n\r\nexport const calculateCurrentRunRate = (totalScore, currentOvers) => {\r\n    const totalOvers = getTotalOvers(currentOvers);\r\n    const [overs] = String(totalOvers).split('.');\r\n    const balls = String(totalOvers).split('.')[1] ? String(totalOvers).split('.')[1] : 0;\r\n    const totalBalls = (Number(overs) * 6 + Number(balls));\r\n    if (totalBalls === 0) {\r\n        return 0\r\n    }\r\n    return Number((totalScore / ((totalBalls / 6))).toFixed(2));\r\n}\r\n\r\nexport const calculateRequiredRunRate = (totalScore, target, currentOvers, oversPerSide) => {\r\n    const totalOvers = getTotalOvers(currentOvers);\r\n    const [overs, balls] = String(totalOvers).split('.');\r\n    const totalBallsRemained = oversPerSide * 6 - (Number(overs) * 6 + (Number(balls) ? Number(balls) : 0));\r\n    return Number((((target - totalScore) / totalBallsRemained) * 6).toFixed(2));\r\n}\r\n\r\nexport const isContinueButtonDisabledForCurrentBall = (runs, extra, wicketType, whoOut, outByPlayer) => {\r\n    let disabled = runs === null && !isNaN(runs) && !extra;\r\n    if (wicketType) {\r\n        if (wicketType === RUN_OUT) {\r\n            if (!whoOut || !outByPlayer) {\r\n                disabled = true;\r\n            } else {\r\n                disabled = false;\r\n            }\r\n        } else if (wicketType === CAUGHT_BY) {\r\n            if (!outByPlayer) {\r\n                disabled = true;\r\n            } else {\r\n                disabled = false;\r\n            }\r\n        } else if (wicketType === STUMPED) {\r\n            if (!outByPlayer) {\r\n                disabled = true\r\n            } else {\r\n                disabled = false;\r\n            }\r\n        } else {\r\n            disabled = false;\r\n        }\r\n    }\r\n    return disabled;\r\n}\r\n\r\nexport const calculateEconomyRateForBowler = (bowler) => {\r\n    const totalRuns = bowler.runsGiven;\r\n    const [overs, balls] = String(bowler.totalOvers).split('.');\r\n    const totalBalls = overs * 6 + (balls ? balls : 0);\r\n    return Number(((totalRuns / totalBalls) * 6).toFixed(2));\r\n}\r\n\r\nexport const getUpdatedInningStats = (currentInning, currentBall, striker, nonStriker, bowler, wicketDetails) => {\r\n\r\n    const totalRunsFromCurrentBall = getRunsFromCurrentBall(currentBall);\r\n    const extraBallIndex = getExtraBallIndex(currentBall);\r\n    const strikerIndex = currentInning.batsmen.findIndex((batsman) => batsman.name === striker.name);\r\n    const nonStrikerIndex = currentInning.batsmen.findIndex((batsman) => batsman.name === nonStriker.name);\r\n    const whoOutIndex = currentInning.batsmen.findIndex((batsman) => batsman.name === wicketDetails.whoOut);\r\n\r\n    // handleOvers\r\n    currentInning.overs[currentInning.overs.length - 1] = {\r\n        ...currentInning.overs[currentInning.overs.length - 1],\r\n        details: [...currentInning.overs[currentInning.overs.length - 1].details, currentBall.join('')],\r\n        totalRunsInThisOver: currentInning.overs[currentInning.overs.length - 1].totalRunsInThisOver + totalRunsFromCurrentBall\r\n    }\r\n\r\n    // handleExtras\r\n    if (extraBallIndex > -1) {\r\n        let ext = getExtrasFromCurrentBall(currentBall);\r\n        currentInning = {\r\n            ...currentInning,\r\n            extras: {\r\n                ...currentInning.extras,\r\n                wides: currentInning.extras.wides ? currentInning.extras.wides + ext.wides : ext.wides,\r\n                noBalls: currentInning.extras.noBalls ? currentInning.extras.noBalls + ext.noBalls : ext.noBalls,\r\n                legByes: currentInning.extras.legByes ? currentInning.extras.legByes + ext.legByes : ext.legByes,\r\n                byes: currentInning.extras.byes ? currentInning.extras.byes + ext.byes : ext.byes,\r\n                penaltyRuns: currentInning.extras.penaltyRuns ? currentInning.extras.penaltyRuns + ext.penaltyRuns : ext.penaltyRuns\r\n            }\r\n        }\r\n    }\r\n\r\n    // handleTotalScore\r\n    currentInning = {\r\n        ...currentInning,\r\n        totalScore: currentInning.totalScore + totalRunsFromCurrentBall\r\n    }\r\n\r\n    // handleStrikerBatsmanDetails \r\n    if (strikerIndex > -1) {\r\n        currentInning.batsmen[strikerIndex] = {\r\n            ...currentInning.batsmen[strikerIndex],\r\n            ...getUpdatedBatsmanStats(currentInning.batsmen[strikerIndex], currentBall)\r\n        }\r\n    }\r\n\r\n    // handleNonStrikerBatsmanDetails \r\n    let index = getRunsIndex(currentBall);\r\n    if (currentBall[extraBallIndex] !== PENALTY_RUNS && (isN(currentBall[index]) && currentBall[index] > 0 && currentBall[index] % 2 !== 0)) {\r\n        if (nonStrikerIndex > -1) {\r\n            currentInning.batsmen[nonStrikerIndex] = {\r\n                ...currentInning.batsmen[nonStrikerIndex],\r\n                status: NOT_OUT_ON_STRIKE\r\n            };\r\n        };\r\n    }\r\n\r\n    // handleWicketDetailsForBatsman \r\n    if (Object.keys(wicketDetails).some((key) => wicketDetails[key])) {\r\n        if (whoOutIndex > -1) {\r\n            currentInning.batsmen[whoOutIndex] = {\r\n                ...currentInning.batsmen[whoOutIndex],\r\n                status: OUT,\r\n                wicketDetails: {\r\n                    bowler: bowler.name,\r\n                    type: wicketDetails.wicketType,\r\n                    outBy: wicketDetails.outByPlayer\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // handleTotalWickets and fall of wickets\r\n    if (isWicketBall(currentBall)) {\r\n        currentInning = {\r\n            ...currentInning,\r\n            totalWickets: currentInning.totalWickets + 1\r\n        }\r\n\r\n        if (whoOutIndex > -1) {\r\n            let totalOvers = getTotalOvers(currentInning.overs);\r\n            currentInning = {\r\n                ...currentInning,\r\n                fow: currentInning.fow ? [...currentInning.fow, { score: currentInning.totalScore, totalOvers: totalOvers, batsman: currentInning.batsmen[whoOutIndex] }] : [{ score: currentInning.totalScore, totalOvers: totalOvers, batsman: currentInning.batsmen[whoOutIndex] }]\r\n            }\r\n        }\r\n    }\r\n\r\n    // Check if over is completed and is maiden or not \r\n    const totalLegalDeliveries = countLegalDeliveriesInOver(currentInning.overs[currentInning.overs.length - 1].details);\r\n    let isOverMaiden = false;\r\n    if (totalLegalDeliveries === 6) {\r\n        currentInning.overs[currentInning.overs.length - 1] = {\r\n            ...currentInning.overs[currentInning.overs.length - 1],\r\n            status: COMPLETE\r\n        }\r\n\r\n        if (currentInning.overs[currentInning.overs.length - 1].totalRunsInThisOver === 0) {\r\n            isOverMaiden = true;\r\n        }\r\n\r\n        if (strikerIndex > -1) {\r\n            let status;\r\n            if (currentInning.batsmen[strikerIndex].status === NOT_OUT_ON_STRIKE) {\r\n                status = NOT_OUT_ON_NON_STRIKE;\r\n            } else if (currentInning.batsmen[strikerIndex].status === NOT_OUT_ON_NON_STRIKE) {\r\n                status = NOT_OUT_ON_STRIKE;\r\n            }\r\n            currentInning.batsmen[strikerIndex] = {\r\n                ...currentInning.batsmen[strikerIndex],\r\n                status: status\r\n            }\r\n        }\r\n\r\n        if (nonStrikerIndex > -1) {\r\n            let status;\r\n            if (currentInning.batsmen[nonStrikerIndex].status === NOT_OUT_ON_STRIKE) {\r\n                status = NOT_OUT_ON_NON_STRIKE;\r\n            } else if (currentInning.batsmen[nonStrikerIndex].status === NOT_OUT_ON_NON_STRIKE) {\r\n                status = NOT_OUT_ON_STRIKE;\r\n            }\r\n\r\n            currentInning.batsmen[nonStrikerIndex] = {\r\n                ...currentInning.batsmen[nonStrikerIndex],\r\n                status: status\r\n            };\r\n        };\r\n    }\r\n\r\n    // handleBowlerDetails\r\n    index = currentInning.bowlers.findIndex((b) => b.name === bowler.name);\r\n    if (index > -1) {\r\n        currentInning.bowlers[index] = {\r\n            ...currentInning.bowlers[index],\r\n            ...getUpdatedBowlerStats(currentInning.bowlers[index], currentBall),\r\n            wicketsTaken: isWicketTakenByBowler(wicketDetails) ? currentInning.bowlers[index].wicketsTaken + 1 : currentInning.bowlers[index].wicketsTaken\r\n        };\r\n\r\n        // handleEconomyRateOfBowler\r\n        currentInning.bowlers[index] = {\r\n            ...currentInning.bowlers[index],\r\n            economy: calculateEconomyRateForBowler(currentInning.bowlers[index]),\r\n            maiden: isOverMaiden ? currentInning.bowlers[index].maiden + 1 : currentInning.bowlers[index].maiden\r\n        };\r\n    }\r\n\r\n    // handle partnerships details\r\n    const { runsScored, ballsFaced } = getUpdatedBatsmanStats(currentInning.partnerships[currentInning.partnerships.length - 1][striker.name], currentBall)\r\n    currentInning.partnerships[currentInning.partnerships.length - 1] = {\r\n        ...currentInning.partnerships[currentInning.partnerships.length - 1],\r\n        [striker.name]: {\r\n            runsScored: runsScored,\r\n            ballsFaced: ballsFaced\r\n        }\r\n    }\r\n\r\n    return currentInning;\r\n}\r\n","import React from 'react'\r\nimport { Chart } from 'primereact/chart';\r\n\r\nfunction RunsVsOversBarChart({ overs }) {\r\n    const basicData = {\r\n        labels: Array.from((Array(overs.length).keys())).map((key => `Over ${key + 1}`)),\r\n        datasets: [\r\n            {\r\n                label: 'Runs',\r\n                backgroundColor: '#2196F3',\r\n                data: Array.from(overs.map(over => over.totalRunsInThisOver))\r\n            }\r\n        ]\r\n    };\r\n\r\n    let basicOptions = {\r\n        maintainAspectRatio: false,\r\n        aspectRatio: 0.8,\r\n        plugins: {\r\n            legend: {\r\n                labels: {\r\n                    color: '#2196F3'\r\n                }\r\n            }\r\n        },\r\n        scales: {\r\n            x: {\r\n                grid: {\r\n                    color: '#ebedef'\r\n                }\r\n            },\r\n            y: {\r\n                grid: {\r\n                    color: '#ebedef'\r\n                },\r\n                beginAtZero: true\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div class=\"rca-batting-score rca-padding \">\r\n            <Chart style={{ height: '325px' }} type=\"bar\" data={basicData} options={basicOptions} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RunsVsOversBarChart\r\n","import React from 'react'\r\n\r\n\r\nfunction Partnerships({ inning }) {\r\n\r\n    return (\r\n        <div className=\"rca-batting-score rca-padding \">\r\n            {\r\n                (() => {\r\n                    return inning.partnerships.map((partnership, index, arr) => {\r\n                        const firstBatsman = Object.keys(partnership)[0];\r\n                        const secondBatsman = Object.keys(partnership)[1];\r\n                        const firstBatsmanScore = partnership[firstBatsman].runsScored;\r\n                        const secondBatsmanScore = partnership[secondBatsman].runsScored;\r\n                        const totalPartnership = firstBatsmanScore + secondBatsmanScore;\r\n                        const firstBatsmanContributionInPercentage = (firstBatsmanScore / (inning.totalScore)) * 100;\r\n                        const secondBatsmanContributionInPercentage = (secondBatsmanScore / (inning.totalScore)) * 100;\r\n\r\n                        return (\r\n                            <>\r\n                                <div className=\"pad-10 rca-no-bottom-padding\" style={{ borderBottom: '1px' }}>\r\n                                    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                                        <div style={{ width: '50%', }}>\r\n                                            <span className=\"rca-match-title\">{firstBatsman}</span>\r\n                                            <span className=\"rca-match-score\">{firstBatsmanScore}({partnership[firstBatsman].ballsFaced})</span>\r\n                                            <span className=\"rca-match-title\">{`&`}</span>\r\n                                            <span className=\"rca-match-title\">{secondBatsman}</span>\r\n                                            <span className=\"rca-match-score\">{secondBatsmanScore}({partnership[secondBatsman].ballsFaced})</span>\r\n                                        </div>\r\n                                        <div className=\"progress\">\r\n                                            <div className=\"barR\" style={{ width: firstBatsmanContributionInPercentage + '%', borderRight: '1px solid #6c757d' }}>\r\n                                                <p className=\"percent\">\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"progress\">\r\n                                            <div className=\"barL\" style={{ width: secondBatsmanContributionInPercentage + '%' }}>\r\n                                                <p className=\"percent\">\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div style={{ width: '10%', marginLeft: '20px' }}>\r\n                                            <span className=\"rca-match-score\">{totalPartnership}({partnership[Object.keys(partnership)[0]].ballsFaced + partnership[Object.keys(partnership)[1]].ballsFaced})</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    });\r\n                })()\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Partnerships\r\n","import React from 'react'\r\nimport { BOWLED, CAUGHT_BY, COMPLETED, FIELD_OBSTRUCT, HIT_WICKET, LBW, NOT_OUT_ON_NON_STRIKE, NOT_OUT_ON_STRIKE, OUT, RUN_OUT, STUMPED, YET_TO_BAT, YET_TO_START } from '../constants'\r\nimport { getTotalOvers } from '../utils/cricketUtils'\r\nimport { TabView, TabPanel } from 'primereact/tabview';\r\nimport RunsVsOversBarChart from './RunsVsOversBarChart';\r\nimport Partnerships from './Partnerships';\r\n\r\nfunction InningDetails({ inning }) {\r\n\r\n    const getWicketDetailsString = (batsman) => {\r\n        let wicketDetails;\r\n        if (batsman.wicketDetails.type === BOWLED || batsman.wicketDetails.type === LBW) {\r\n            wicketDetails = `${batsman.wicketDetails.type} ${batsman.wicketDetails.bowler}`\r\n        }\r\n        if (batsman.wicketDetails.type === RUN_OUT || batsman.wicketDetails.type === STUMPED) {\r\n            wicketDetails = `${batsman.wicketDetails.type} ${batsman.wicketDetails.outBy}`\r\n        }\r\n        if (batsman.wicketDetails.type === CAUGHT_BY) {\r\n            wicketDetails = `${batsman.wicketDetails.type} ${batsman.wicketDetails.outBy} B ${batsman.wicketDetails.bowler}`\r\n        }\r\n        if (batsman.wicketDetails.type === HIT_WICKET || batsman.wicketDetails.type === FIELD_OBSTRUCT) {\r\n            wicketDetails = `${batsman.wicketDetails.type}`\r\n        }\r\n        return wicketDetails;\r\n    }\r\n\r\n    if (inning.status !== YET_TO_START) {\r\n        return (\r\n            <>\r\n                <TabView style={{ fontFamily: \"Lato, Verdana, Helvetica, sans-serif\" }}>\r\n                    <TabPanel header=\"Scorecard\">\r\n                        <div style={{ maxHeight: '350px', overflowY: 'scroll' }} class=\"rca-padding rca-no-top-padding rca-no-bottom-padding\">\r\n                            <div class=\"rca-batting-score rca-padding \">\r\n                                <h3>{inning.battingTeam} Batting: <strong> {inning.totalScore}/{inning.totalWickets} in {getTotalOvers(inning.overs)} Overs</strong></h3>\r\n                                <div class=\"rca-row\">\r\n                                    <div class=\"rca-header rca-table\">\r\n                                        <div class=\"rca-col rca-player\">\r\n                                            Batsmen\r\n                                        </div>\r\n                                        <div class=\"rca-col rca-player\">\r\n                                        </div>\r\n                                        <div class=\"rca-col\">\r\n                                            Runs\r\n                                        </div>\r\n                                        <div class=\"rca-col\">\r\n                                            4s\r\n                                        </div>\r\n                                        <div class=\"rca-col\">\r\n                                            6s\r\n                                        </div>\r\n                                        <div class=\"rca-col\">\r\n                                            Strike Rate\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {(() => {\r\n                                    let batsmenJsx = inning.batsmen.filter((batsman) => batsman.status !== YET_TO_BAT).sort((a, b) => a.order - b.order).map((batsman, index) => {\r\n                                        let wicketDetails;\r\n                                        let status;\r\n                                        if (batsman.wicketDetails) {\r\n                                            wicketDetails = getWicketDetailsString(batsman);\r\n                                        } else {\r\n                                            if (batsman.status === NOT_OUT_ON_STRIKE || batsman.status === NOT_OUT_ON_NON_STRIKE) {\r\n                                                status = 'Not Out';\r\n                                            }\r\n                                        }\r\n                                        return (\r\n                                            <div key={index} class=\"rca-row\">\r\n                                                <div class=\"rca-table\">\r\n                                                    <div class=\"rca-col rca-player\">\r\n                                                        {batsman.name}\r\n                                                    </div>\r\n                                                    <div class=\"rca-col rca-player\">\r\n                                                        {wicketDetails ? wicketDetails : <span style={{ color: '#2196F3' }}>{status}</span>}\r\n                                                    </div>\r\n                                                    <div class=\"rca-col\">\r\n                                                        {batsman.runsScored} ({batsman.ballsFaced})\r\n                                                    </div>\r\n                                                    <div class=\"rca-col\">\r\n                                                        {batsman.fours}\r\n                                                    </div>\r\n                                                    <div class=\"rca-col\">\r\n                                                        {batsman.sixes}\r\n                                                    </div>\r\n                                                    <div class=\"rca-col\">\r\n                                                        {batsman.strikeRate}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    });\r\n                                    return batsmenJsx\r\n                                })()}\r\n                                <div class=\"rca-clear\"></div>\r\n                                <div class=\"rca-padding\">\r\n                                    <span>Fours: <strong>{(() => inning.batsmen.reduce(((fours, batsman) => fours + batsman.fours), 0))()}</strong></span>,\r\n                                    <span> Sixes: <strong>{(() => inning.batsmen.reduce(((fours, batsman) => fours + batsman.sixes), 0))()}</strong></span>,\r\n                                    <span> Extras: <strong>{(() => Object.keys(inning.extras).reduce(((extra, key) => extra + inning.extras[key]), 0))()} (WD: {inning.extras.wides}, NB: {inning.extras.noBalls}, LB: {inning.extras.legByes}, B: {inning.extras.byes}, P: {inning.extras.penaltyRuns})</strong></span>\r\n                                </div>\r\n                                {\r\n                                    (() => {\r\n                                        if (inning.status !== COMPLETED) {\r\n                                            return (\r\n                                                <div class=\"rca-padding\">\r\n                                                    <span class=\"rca-match-title\">Yet To Bat:</span>\r\n                                                    {\r\n                                                        (() => {\r\n                                                            return inning.batsmen.filter(batsman => ![NOT_OUT_ON_NON_STRIKE, NOT_OUT_ON_STRIKE, OUT].includes(batsman.status)).map((batsman, index, arr) => {\r\n                                                                return (\r\n                                                                    <>\r\n                                                                        <span class=\"rca-match-score\">{batsman.name}<span>{index < arr.length - 1 ? ',' : ''}</span></span>\r\n                                                                    </>\r\n                                                                )\r\n                                                            })\r\n                                                        })()\r\n                                                    }\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    })()\r\n                                }\r\n                                {\r\n                                    inning.fow ? <div class=\"rca-padding\">\r\n                                        <span class=\"rca-match-title\">Fall Of Wickets:</span>\r\n                                        {\r\n                                            (() => {\r\n                                                const fow = inning.fow;\r\n                                                let fowJsx = [];\r\n                                                if (fow) {\r\n                                                    fowJsx = fow.map((wkt, index, arr) => {\r\n                                                        let wicketDetails = getWicketDetailsString(wkt.batsman);\r\n                                                        return (\r\n                                                            <>\r\n                                                                <span class=\"rca-match-score\"><span className=\"bold\">{wkt.score}-{index + 1}</span> ({wkt.batsman.name} {wicketDetails} {wkt.batsman.runsScored}({wkt.batsman.ballsFaced}), {wkt.totalOvers} Overs)<span>{index < arr.length - 1 ? ',' : ''}</span></span>\r\n                                                            </>\r\n                                                        )\r\n                                                    });\r\n                                                }\r\n                                                return fowJsx;\r\n                                            })()\r\n                                        }\r\n                                    </div>\r\n                                        : ''\r\n                                }\r\n                            </div>\r\n                            <div class=\"rca-bowling-score rca-padding\">\r\n                                <h3> {inning.bowlingTeam} Bowling:</h3>\r\n                                <div class=\"rca-row\">\r\n                                    <div class=\"rca-header rca-table\">\r\n                                        <div class=\"rca-col rca-player\">\r\n                                            Bowlers\r\n                                        </div>\r\n                                        <div class=\"rca-col\">\r\n                                            Overs\r\n                                        </div>\r\n                                        <div class=\"rca-col\">\r\n                                            Maiden\r\n                                        </div>\r\n                                        <div class=\"rca-col\">\r\n                                            Runs\r\n                                        </div>\r\n                                        <div class=\"rca-col\">\r\n                                            Wickets\r\n                                        </div>\r\n                                        <div class=\"rca-col\">\r\n                                            Economy\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {\r\n                                    (() => {\r\n                                        let bowlerJsx = inning.bowlers.filter((bowler) => bowler.totalOvers > 0).map((bowler, index) => {\r\n                                            return (\r\n                                                <div key={bowler.index} class=\"rca-row\">\r\n                                                    <div class=\"rca-table\">\r\n                                                        <div class=\"rca-col rca-player\">\r\n                                                            {bowler.name}\r\n                                                        </div>\r\n                                                        <div class=\"rca-col\">\r\n                                                            {bowler.totalOvers}\r\n                                                        </div>\r\n                                                        <div class=\"rca-col\">\r\n                                                            {bowler.maiden}\r\n                                                        </div>\r\n                                                        <div class=\"rca-col\">\r\n                                                            {bowler.runsGiven}\r\n                                                        </div>\r\n                                                        <div class=\"rca-col\">\r\n                                                            {bowler.wicketsTaken}\r\n                                                        </div>\r\n                                                        <div class=\"rca-col\">\r\n                                                            {bowler.economy}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        });\r\n                                        return bowlerJsx;\r\n                                    })()\r\n                                }\r\n                                <div class=\"rca-clear\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </TabPanel>\r\n                    <TabPanel header=\"Partnerships\">\r\n                        <div style={{ maxHeight: '350px', overflowY: 'auto' }} class=\"rca-padding rca-no-top-padding rca-no-bottom-padding\">\r\n                            <Partnerships inning={inning}></Partnerships>\r\n                        </div>\r\n                    </TabPanel>\r\n                    <TabPanel header=\"Runs Per Over\">\r\n                        <div style={{ maxHeight: '350px', overflowY: 'auto' }} class=\"rca-padding rca-no-top-padding rca-no-bottom-padding\">\r\n                            <RunsVsOversBarChart overs={inning.overs}></RunsVsOversBarChart>\r\n                        </div>\r\n                    </TabPanel>\r\n                </TabView>\r\n            </>\r\n        )\r\n    } else {\r\n        return <div style={{ fontSize: '40px', padding: '85px', textAlign: 'center' }}>Inning Yet To Start</div>\r\n    }\r\n}\r\n\r\nexport default InningDetails\r\n","import React from 'react'\r\nimport { Chart } from 'primereact/chart';\r\nimport { YET_TO_START } from '../constants';\r\n\r\nconst COLORS = ['#2196F3', '#FFFF00'];\r\n\r\nfunction ComparisionChart({ innings }) {\r\n    let basicData;\r\n    if (innings) {\r\n        let maxOvers;\r\n        if (innings[0].status !== YET_TO_START) {\r\n            maxOvers = innings[0].overs;\r\n        }\r\n        if (innings[1].status !== YET_TO_START) {\r\n            maxOvers = innings[0].overs.length > innings[1].overs.length ? innings[0].overs : innings[1].overs\r\n        }\r\n        basicData = {\r\n            labels: [0, ...Array.from((Array(maxOvers.length).keys())).map((key => `${key + 1}`))],\r\n            datasets: innings.map((inning, index) => {\r\n                return {\r\n                    type: 'line',\r\n                    label: inning.battingTeam,\r\n                    data: [0, ...inning.overs.map((over, index) => {\r\n                        let score = 0;\r\n                        for (let i = 0; i <= index; i++) {\r\n                            score = score + inning.overs[i].totalRunsInThisOver\r\n                        }\r\n                        return score;\r\n                    })],\r\n                    fill: false,\r\n                    borderColor: COLORS[index],\r\n                    tension: .4,\r\n                    radius: 0,\r\n                    pointBackgroundColor: COLORS[index]\r\n                }\r\n            })\r\n        };\r\n\r\n        basicData = {\r\n            ...basicData,\r\n            datasets: [\r\n                ...basicData.datasets,\r\n                ...innings.map((inning, index) => {\r\n                    return {\r\n                        type: 'bar',\r\n                        label: `${inning.battingTeam} Runs Per Over`,\r\n                        data: [0, ...Array.from(inning.overs.map(over => over.totalRunsInThisOver))],\r\n                        backgroundColor: COLORS[index]\r\n                    }\r\n                })\r\n            ]\r\n        }\r\n    }\r\n\r\n    let basicOptions = {\r\n        maintainAspectRatio: false,\r\n        aspectRatio: .6,\r\n        plugins: {\r\n            legend: {\r\n                labels: {\r\n                    color: '#495057'\r\n                }\r\n            }\r\n        },\r\n        scales: {\r\n            x: {\r\n                ticks: {\r\n                    color: '#495057'\r\n                },\r\n                grid: {\r\n                    color: '#ebedef'\r\n                },\r\n            },\r\n            y: {\r\n                ticks: {\r\n                    color: '#495057'\r\n                },\r\n                grid: {\r\n                    color: '#ebedef'\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div class=\"rca-batting-score rca-padding \">\r\n            <Chart style={{ height: '325px' }} type=\"line\" data={basicData} options={basicOptions} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComparisionChart\r\n","import React from 'react'\r\nimport { TabView, TabPanel } from 'primereact/tabview';\r\nimport InningDetails from './InningDetails';\r\nimport { connect } from 'react-redux';\r\nimport ComparisionChart from './ComparisionChart';\r\nimport { YET_TO_START } from '../constants';\r\n\r\nfunction FullScorecard({ innings, currentInningIndex }) {\r\n    return (\r\n        <>\r\n            <TabView activeIndex={currentInningIndex} style={{ fontFamily: \"Lato, Verdana, Helvetica, sans-serif\" }}>\r\n                {\r\n                    (() => {\r\n                        let inningsJsx = innings.map((inning, index) => {\r\n                            return (\r\n                                <TabPanel key={index} header={\"Inning \" + (index + 1)}>\r\n                                    <div style={{ maxHeight: '400px' }}>\r\n                                        <InningDetails inning={inning}></InningDetails>\r\n                                    </div>\r\n                                </TabPanel>\r\n                            )\r\n                        });\r\n                        return inningsJsx;\r\n                    })()\r\n                }\r\n                <TabPanel disabled={innings[0].status === YET_TO_START} header=\"Comparison\">\r\n                    <div style={{ maxHeight: '350px' }} class=\"rca-padding rca-no-top-padding rca-no-bottom-padding\">\r\n                        <ComparisionChart innings={innings}></ComparisionChart>\r\n                    </div>\r\n                </TabPanel>\r\n            </TabView>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        innings: state.match.innings,\r\n        currentInningIndex: state.match.currentInningIndex\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(FullScorecard)\r\n","import { IN_PROGRESS, NOT_OUT_ON_NON_STRIKE, NOT_OUT_ON_STRIKE, RETD_HURT, YET_TO_BAT } from \"../constants\";\r\nimport { calculateCurrentRunRate, calculateRequiredRunRate, getTotalOvers } from \"../utils/cricketUtils\";\r\n\r\nexport const INSERT_MATCH_DETALS = 'INSERT_MATCH_DETAILS';\r\nexport const UPDATE_INNINGS = 'UPDATE_INNINGS';\r\nexport const FORCE_END_OVER = 'FORCE_END_OVER';\r\nexport const END_BALL = 'END_BALL';\r\nexport const END_INNING = 'END_INNING';\r\nexport const RESET_LAST_BALL = 'RESET_LAST_BALL';\r\nexport const START_NEXT_INNING = 'START_NEXT_INNING';\r\nexport const SET_MATCH_RESULT = 'SET_MATCH_RESULT';\r\n\r\nexport const getYetToBatOrRetdHurtBatsmen = (match) => {\r\n    return match.innings[match.currentInningIndex].batsmen.filter((batsman) => batsman.status === YET_TO_BAT || batsman.status === RETD_HURT);\r\n}\r\n\r\nexport const getNotOutBatsmen = (match) => {\r\n    return match.innings[match.currentInningIndex].batsmen.filter((batsman) => batsman.status === NOT_OUT_ON_NON_STRIKE || batsman.status === NOT_OUT_ON_STRIKE);\r\n}\r\n\r\nexport const getStrikerBatsman = (match) => {\r\n    const batsman = match.innings[match.currentInningIndex].batsmen.filter((batsman) => batsman.status === NOT_OUT_ON_STRIKE)[0];\r\n    return batsman ? batsman : null;\r\n}\r\n\r\nexport const getNonStrikerBatsman = (match) => {\r\n    const batsman = match.innings[match.currentInningIndex].batsmen.filter((batsman) => batsman.status === NOT_OUT_ON_NON_STRIKE)[0];\r\n    return batsman ? batsman : null;\r\n}\r\n\r\nexport const getNextPossibleBowlers = (match) => {\r\n    let overs = match.innings[match.currentInningIndex].overs;\r\n    return match.innings[match.currentInningIndex].bowlers.filter((bowler) => {\r\n        if (overs.length === 0) {\r\n            return true;\r\n        } else {\r\n            if (overs[overs.length - 1].bowlerName !== bowler.name) {\r\n                if (Number(bowler.totalOvers) < match.details.maxOversPerBowler) {\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport const getCurrentBowler = (match) => {\r\n    let overs = match.innings[match.currentInningIndex].overs;\r\n    let lastOver = overs.length && overs[overs.length - 1];\r\n    const bowlerName = lastOver && lastOver.status === IN_PROGRESS ? lastOver.bowlerName : null;\r\n    if (bowlerName) {\r\n        return match.innings[match.currentInningIndex].bowlers.filter((bowler) => bowler.name === bowlerName)[0];\r\n    }\r\n    return null;\r\n}\r\n\r\nexport const getCurrentOver = (match) => {\r\n    let overs = match.innings[match.currentInningIndex].overs;\r\n    let lastOver = overs.length && overs[overs.length - 1];\r\n    return lastOver ? lastOver : null;\r\n}\r\n\r\nexport const getTotalWickets = (match) => {\r\n    return match.innings[match.currentInningIndex].totalWickets;\r\n}\r\n\r\nexport const getTotalPlayersPerSide = (match) => {\r\n    return match.details.totalPlayersPerSide;\r\n}\r\n\r\nexport const getCurrentInning = (match) => {\r\n    return match.innings[match.currentInningIndex];\r\n}\r\n\r\nexport const getLastBall = (match) => {\r\n    let overs = match.innings[match.currentInningIndex].overs;\r\n    let lastOver = overs.length > 0 && overs[overs.length - 1];\r\n    let lastBall = lastOver && lastOver.details.length > 0 && lastOver.details[lastOver.details.length - 1];\r\n    return lastBall ? lastBall : '';\r\n}\r\n\r\nexport const getBattingTeamPlayers = (match) => {\r\n    return match.details.teams[match.innings[match.currentInningIndex].battingTeam];\r\n}\r\n\r\nexport const getBowlingTeamPlayers = (match) => {\r\n    return match.details.teams[match.innings[match.currentInningIndex].bowlingTeam];\r\n}\r\n\r\nexport const getTotalOversCount = (match) => {\r\n    return getTotalOvers(match.innings[match.currentInningIndex].overs)\r\n}\r\n\r\nexport const getCurrentRunRate = (match) => {\r\n    return calculateCurrentRunRate(match.innings[match.currentInningIndex].totalScore, match.innings[match.currentInningIndex].overs);\r\n}\r\n\r\nexport const getRequiredRunRate = (match) => {\r\n    return calculateRequiredRunRate(match.innings[match.currentInningIndex].totalScore, match.innings[match.currentInningIndex].target, match.innings[match.currentInningIndex].overs, match.details.totalOversPerInning);\r\n}\r\n\r\nexport const getTotalOversPerInning = (match) => {\r\n    return match.details.totalOversPerInning;\r\n}\r\n\r\nexport const getTeams = (match) => {\r\n    return Object.keys(match.details.teams);\r\n}\r\n\r\nexport const getLiveScore = (match) => {\r\n    if (match.innings[match.currentInningIndex]) {\r\n        return `Live ${match.innings[match.currentInningIndex].battingTeam}: ${match.innings[match.currentInningIndex].totalScore}/${match.innings[match.currentInningIndex].totalWickets} in ${getTotalOversCount(match)} Overs`;\r\n    }\r\n    return '';\r\n}\r\n\r\nconst initialState = {\r\n    details: null,\r\n    innings: [],\r\n    currentInningIndex: 0,\r\n}\r\n\r\nexport const insertMatchDetails = (matchDetails) => {\r\n    return {\r\n        type: INSERT_MATCH_DETALS,\r\n        payload: matchDetails\r\n    };\r\n}\r\n\r\nexport const updateInnings = (innings) => {\r\n    return {\r\n        type: UPDATE_INNINGS,\r\n        payload: innings\r\n    };\r\n}\r\n\r\nexport const startNextInning = () => {\r\n    return {\r\n        type: START_NEXT_INNING\r\n    }\r\n}\r\n\r\nexport const setMatchResult = (matchResult) => {\r\n    return {\r\n        type: SET_MATCH_RESULT,\r\n        payload: matchResult\r\n    }\r\n}\r\n\r\nexport const matchReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INSERT_MATCH_DETALS:\r\n            return { ...state, details: action.payload };\r\n        case UPDATE_INNINGS:\r\n            return { ...state, innings: action.payload };\r\n        case START_NEXT_INNING:\r\n            return { ...state, currentInningIndex: state.currentInningIndex + 1 };\r\n        case SET_MATCH_RESULT:\r\n            return { ...state, details: { ...state.details, result: action.payload } };\r\n        case FORCE_END_OVER:\r\n            return { ...state, innings: action.payload };\r\n        case END_BALL:\r\n            return { ...state, innings: action.payload };\r\n        case END_INNING:\r\n            return { ...state, innings: action.payload };\r\n        case RESET_LAST_BALL:\r\n            return { ...state, innings: action.payload };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default matchReducer;\r\n","import React, { useState } from 'react'\r\nimport { Chips } from 'primereact/chips'\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { insertMatchDetails, updateInnings } from '../redux';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MOCK_TEAM_1, MOCK_TEAM_2, ONE_DAY_MATCH, TEST_MATCH } from '../constants';\r\nimport { formInning } from '../utils/cricketUtils';\r\n\r\nfunction MatchDetails({ insertMatchDetails, updateInnings }) {\r\n\r\n    const [firstTeamName, setFirstTeamName] = useState(MOCK_TEAM_1.name);\r\n    const [secondTeamName, setSecondTeamName] = useState(MOCK_TEAM_2.name);\r\n    const [matchType, setMatchType] = useState(ONE_DAY_MATCH);\r\n    const [totalOversPerInning, setTotalOvers] = useState(5);\r\n    const [firstTeamPlayers, setFirstTeamPlayers] = useState(MOCK_TEAM_1.players);\r\n    const [secondTeamPlayers, setSecondTeamPlayers] = useState(MOCK_TEAM_2.players);\r\n    const [tossResult, setTossResult] = useState(121);\r\n    const [maxOversPerBowler, setMaxOversPerBowler] = useState(1);\r\n\r\n    let history = useHistory();\r\n\r\n    let matchTypes = [\r\n        { name: 'One Day Match', value: ONE_DAY_MATCH },\r\n        { name: 'Test Match (Not Supported)', value: TEST_MATCH, disabled: true }\r\n    ];\r\n\r\n    let oversOptions = Array.from(Array(50).keys()).map((i) => { return { name: i + 1, value: i + 1 } });\r\n\r\n    let tossResultOptions = [\r\n        { name: firstTeamName + ' won the toss and elected to bat first', value: 121 },\r\n        { name: firstTeamName + ' won the toss and elected to bowl first', value: 211 },\r\n        { name: secondTeamName + ' won the toss and elected to bat first', value: 212 },\r\n        { name: secondTeamName + ' won the toss and elected to bowl first', value: 122 }\r\n    ];\r\n\r\n    let maxOversPerBowlerOptions = Array.from(Array(Math.ceil(Number(totalOversPerInning / 2))).keys()).map((i) => { return { name: i + 1, value: i + 1 } });\r\n\r\n    const setMatchDetails = () => {\r\n        insertMatchDetails({\r\n            teams: { [firstTeamName]: firstTeamPlayers, [secondTeamName]: secondTeamPlayers },\r\n            matchType: matchType,\r\n            totalOversPerInning: totalOversPerInning,\r\n            tossResult: tossResult,\r\n            maxOversPerBowler: maxOversPerBowler,\r\n            totalPlayersPerSide: firstTeamPlayers.length\r\n        });\r\n        let innings = [];\r\n        let battingTeam, battingTeamPlayers, bowlingTeam, bowlingTeamPlayers;\r\n        if (tossResult === 121 || tossResult === 122) {\r\n            battingTeam = firstTeamName;\r\n            battingTeamPlayers = firstTeamPlayers;\r\n            bowlingTeam = secondTeamName;\r\n            bowlingTeamPlayers = secondTeamPlayers;\r\n        } else {\r\n            battingTeam = secondTeamName;\r\n            battingTeamPlayers = secondTeamPlayers;\r\n            bowlingTeam = firstTeamName;\r\n            bowlingTeamPlayers = firstTeamPlayers;\r\n        }\r\n        innings.push(formInning(battingTeam, battingTeamPlayers, bowlingTeam, bowlingTeamPlayers));\r\n        if (matchType === ONE_DAY_MATCH) {\r\n            innings.push(formInning(bowlingTeam, bowlingTeamPlayers, battingTeam, battingTeamPlayers));\r\n        }\r\n        updateInnings(innings);\r\n        history.push('full-scorecard');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"p-fluid p-formgrid p-grid\">\r\n                <div className=\"p-field p-col-12 p-md-6\">\r\n                    <label htmlFor=\"team1\">First Team Name</label>\r\n                    <InputText id=\"team1\" type=\"text\" placeholder=\"Enter team name\" value={firstTeamName} onChange={(e) => setFirstTeamName(e.target.value)} />\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-6\">\r\n                    <label htmlFor=\"team2\">Second Team Name</label>\r\n                    <InputText id=\"team2\" type=\"text\" placeholder=\"Enter team name\" value={secondTeamName} onChange={(e) => setSecondTeamName(e.target.value)} />\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-3\">\r\n                    <label htmlFor=\"matchType\">Match Type</label>\r\n                    <Dropdown inputId=\"matchType\" value={matchType} options={matchTypes} onChange={(e) => setMatchType(e.value)} placeholder=\"Select\" optionLabel=\"name\" />\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-3\">\r\n                    <label htmlFor=\"overs\">No. of Overs</label>\r\n                    <Dropdown inputId=\"overs\" value={totalOversPerInning} options={oversOptions} onChange={(e) => setTotalOvers(e.value)} placeholder=\"Select\" optionLabel=\"name\" />\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-3\">\r\n                    <label htmlFor=\"overs\">Max. Overs Per Bowler</label>\r\n                    <Dropdown inputId=\"maxOversPerBowler\" value={maxOversPerBowler} options={maxOversPerBowlerOptions} onChange={(e) => setMaxOversPerBowler(e.value)} placeholder=\"Select\" optionLabel=\"name\" />\r\n                </div>\r\n                <div className=\"p-field p-col-12 p-md-3\">\r\n                    <label htmlFor=\"tossResult\">Toss Result</label>\r\n                    <Dropdown inputId=\"tossResult\" value={tossResult} options={tossResultOptions} onChange={(e) => setTossResult(e.value)} placeholder=\"Select\" optionLabel=\"name\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"card p-fluid\">\r\n                <h4>Add {firstTeamName || '1st'} Team Players</h4>\r\n                <Chips value={firstTeamPlayers} max={11} onChange={(e) => setFirstTeamPlayers(e.value)} />\r\n            </div>\r\n            <div className=\"card p-fluid\">\r\n                <h4>Add {secondTeamName || '2nd'} Team Players</h4>\r\n                <Chips value={secondTeamPlayers} max={11} onChange={(e) => setSecondTeamPlayers(e.value)} />\r\n            </div>\r\n            <div className=\"p-fluid\">\r\n                <Button type=\"button\" label=\"Start Match\" className=\"p-mt-5\" onClick={() => setMatchDetails()} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToDispatch = (dispatch) => {\r\n    return {\r\n        insertMatchDetails: (details) => dispatch(insertMatchDetails(details)),\r\n        updateInnings: (innings) => dispatch(updateInnings(innings))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapStateToDispatch)(MatchDetails);\r\n","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { COMPLETED, IN_PROGRESS, YET_TO_START } from '../constants';\r\nimport {\r\n    getCurrentBowler,\r\n    getCurrentInning,\r\n    getCurrentOver,\r\n    getCurrentRunRate,\r\n    getNonStrikerBatsman,\r\n    getRequiredRunRate,\r\n    getStrikerBatsman,\r\n    getTeams,\r\n    getTotalOversCount,\r\n    getTotalOversPerInning\r\n} from '../redux'\r\n\r\nfunction CurrentScore({\r\n    currentInning,\r\n    totalOvers,\r\n    currentRunRate,\r\n    strikerBatsman,\r\n    nonStrikerBatsman,\r\n    currentOver,\r\n    currentBowler,\r\n    totalOversPerInning,\r\n    currentInningIndex,\r\n    tossResult,\r\n    teams,\r\n    requiredRunRate,\r\n    matchResult,\r\n    fow\r\n}) {\r\n\r\n    const [whoWonToss,] = useState(Number(String(tossResult).split('')[2]));\r\n    const [tossDecision,] = useState(Number(String(tossResult).split('')[0]) === whoWonToss ? \"bat\" : \"bowl\");\r\n\r\n    if (currentInning.status === IN_PROGRESS) {\r\n        return (\r\n            <>\r\n                <div class=\"rca-column-4 rca-no-right-padding\">\r\n                    <div class=\"rca-menu-widget rca-left-border\">\r\n                        <div class=\"pad-10 rca-no-bottom-padding\">\r\n                            <span class=\"rca-match-title\">{currentInning.battingTeam}:</span>\r\n                            <span class=\"rca-match-score bold\">{currentInning.totalScore}/{currentInning.totalWickets}</span>\r\n                            <span class=\"rca-match-title\">Overs:</span>\r\n                            <span class=\"rca-match-score bold\">{totalOvers} ({totalOversPerInning})</span>\r\n                            <span class=\"rca-match-title\">CRR:</span>\r\n                            <span class=\"rca-match-score bold\">{currentRunRate}</span>\r\n                        </div>\r\n                        <div class=\"pad-10\">\r\n                            {\r\n                                (() => {\r\n                                    if (currentInning.target) {\r\n                                        return (\r\n                                            <>\r\n                                                <span class=\"rca-match-title\">Target:</span>\r\n                                                <span class=\"rca-match-score bold\">{currentInning.target}</span>\r\n                                                <span class=\"rca-match-title\">RRR:</span>\r\n                                                <span class=\"rca-match-score bold\">{requiredRunRate}</span>\r\n                                            </>\r\n                                        )\r\n                                    } else {\r\n                                        return (\r\n                                            <>\r\n                                                <span class=\"rca-match-title\">Toss:</span>\r\n                                                <span class=\"rca-match-score bold\">{teams[whoWonToss - 1]}({tossDecision})</span>\r\n                                            </>\r\n                                        )\r\n                                    }\r\n                                })()\r\n                            }\r\n                            {\r\n                                (() => {\r\n                                    const partnership = currentInning.partnerships[currentInning.partnerships.length - 1];\r\n                                    const totalBallsFaced = Object.keys(partnership).reduce(((balls, key) => balls + partnership[key].ballsFaced), 0);\r\n                                    const lastWicketScore = fow ? fow[fow.length - 1].score : 0;\r\n                                    return (\r\n                                        <>\r\n                                            <span class=\"rca-match-title\">Partnership:</span>\r\n                                            <span class=\"rca-match-score bold\">{currentInning.totalScore - lastWicketScore}({totalBallsFaced})</span>\r\n                                        </>\r\n                                    )\r\n                                })()\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"rca-column-2  rca-no-right-padding rca-no-left-padding\">\r\n                    <div class=\"rca-left-border\" style={{ backgroundColor: 'white' }}>\r\n                        {\r\n                            (() => {\r\n                                return (\r\n                                    <>\r\n                                        {(() => {\r\n                                            if (strikerBatsman) {\r\n                                                return (\r\n                                                    <div className=\"pad-10 rca-no-bottom-padding\">\r\n                                                        <div className=\"rca-batsman\">\r\n                                                            <span className=\"player\">{strikerBatsman.name}</span>\r\n                                                            <span style={{ float: 'right' }}><span style={{ color: '#2196F3' }}>*</span>{strikerBatsman.runsScored}({strikerBatsman.ballsFaced})</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                            return <></>\r\n                                        })()}\r\n                                        {(() => {\r\n                                            if (nonStrikerBatsman) {\r\n                                                return (\r\n                                                    <div className=\"pad-10\">\r\n                                                        <div className=\"rca-batsman\">\r\n                                                            <span className=\"player\">{nonStrikerBatsman.name}</span>\r\n                                                            <span style={{ float: 'right' }}>{nonStrikerBatsman.runsScored}({nonStrikerBatsman.ballsFaced})</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                            return <></>\r\n                                        })()}\r\n                                    </>\r\n                                )\r\n                            })()\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div class=\"rca-column-6 rca-no-left-padding\">\r\n                    <div class=\"rca-menu-widget rca-left-border rca-right-border\">\r\n                        <div className=\"pad-10 rca-no-bottom-padding\">\r\n                            <div className=\"rca-ball-detail\" style={{ marginTop: '2.5px' }}>\r\n                                {\r\n                                    (() => {\r\n                                        if (currentBowler) {\r\n                                            return (\r\n                                                <div className=\"rca-bowler-info\" style={{ display: 'inline', marginRight: '5px' }}>\r\n                                                    <span class=\"rca-match-title\">{currentBowler.name}:</span>\r\n                                                    <span className=\"rca-bolwing\">{currentBowler.runsGiven}-{currentBowler.wicketsTaken} in {currentBowler.totalOvers}</span>\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    })()\r\n                                }\r\n                                <div className=\"rca-match-schedule\" style={{ display: 'inline' }}>\r\n                                    <span class=\"rca-match-title\" style={{ marginRight: '5px' }}>This Over:</span>\r\n                                    <ul className=\"rca-ball-by\" style={{ display: 'inline-block' }}>\r\n                                        {\r\n                                            (() => {\r\n                                                if (currentOver && currentOver.details.length) {\r\n                                                    return currentOver.details.map((ball) => {\r\n                                                        let clsName = '';\r\n                                                        if (ball.includes('6') || ball.includes('4')) {\r\n                                                            clsName = 'b6';\r\n                                                        }\r\n\r\n                                                        if (ball.includes('W') && !ball.includes('WD')) {\r\n                                                            clsName = 'w';\r\n                                                        }\r\n                                                        return <li className={clsName}>{ball}</li>\r\n                                                    });\r\n                                                }\r\n                                                return <>-</>\r\n                                            })()\r\n                                        }\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"pad-10\">\r\n                            {\r\n                                (() => {\r\n                                    if (fow) {\r\n                                        const lastWicket = fow[fow.length - 1];\r\n                                        return (\r\n                                            <>\r\n                                                <span class=\"rca-match-title\">Last Wicket:</span>\r\n                                                <span class=\"rca-match-score bold\">{lastWicket.score}-{currentInning.totalWickets} ({lastWicket.batsman.name})</span>\r\n                                            </>\r\n                                        )\r\n                                    }\r\n                                })()\r\n                            }\r\n                            {\r\n                                (() => {\r\n                                    if (currentInning.target) {\r\n                                        return <span class=\"rca-match-score bold\"> {currentInning.battingTeam} NEEDS {currentInning.target - currentInning.totalScore} RUNS OFF {(((currentInning.target - currentInning.totalScore) / requiredRunRate) * 6).toFixed(0)} BALLS</span>\r\n                                    } else {\r\n                                        return (\r\n                                            <>\r\n                                                <span class=\"rca-match-title\">Projected Score:</span>\r\n                                                <span class=\"rca-match-score bold\">{(currentRunRate * totalOversPerInning).toFixed(0)}</span>\r\n                                            </>\r\n                                        )\r\n                                    }\r\n                                })()\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    } else if (currentInning.status === YET_TO_START) {\r\n        return (\r\n            <>\r\n                <div class=\"rca-column-12\">\r\n                    <div class=\"rca-menu-widget rca-left-border\">\r\n                        <div class=\"rca-padding\" style={{ textAlign: 'center' }}>\r\n                            <span style={{ fontWeight: 'bold' }}>{currentInning.battingTeam} vs {currentInning.bowlingTeam} </span>\r\n                            <span>{totalOversPerInning} Over Match, </span>\r\n                            {\r\n                                (() => {\r\n                                    if (currentInningIndex === 0) {\r\n                                        return (\r\n                                            <>\r\n                                                <span style={{ fontWeight: 'bold' }} className=\"rca-center\">\r\n                                                    Toss Result - {teams[whoWonToss - 1]} won the toss and elected to {tossDecision} first\r\n                                                </span>\r\n                                            </>\r\n                                        )\r\n                                    } else {\r\n                                        return (\r\n                                            <>\r\n                                                <span style={{ fontWeight: 'bold' }}>{currentInning.battingTeam} Requires {currentInning.target} in {totalOversPerInning} Overs at Rate {requiredRunRate} Runs Per Over</span>\r\n                                            </>\r\n                                        )\r\n                                    }\r\n                                })()\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    } else if (matchResult) {\r\n        return (\r\n            <>\r\n                <div class=\"rca-column-12\">\r\n                    <div class=\"rca-menu-widget rca-left-border\">\r\n                        <div class=\"rca-padding\" style={{ textAlign: 'center' }}>\r\n                            <span style={{ fontWeight: 'bold' }}>1'st Inning {currentInning.bowlingTeam} - {currentInning.target - 1}, </span>\r\n                            <span style={{ fontWeight: 'bold' }}>2'nd Inning {currentInning.battingTeam} - {currentInning.totalScore}/{currentInning.totalWickets}, {matchResult}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    } else if (currentInning.status === COMPLETED) {\r\n        return (\r\n            <>\r\n                <div class=\"rca-column-12\">\r\n                    <div class=\"rca-menu-widget rca-left-border\">\r\n                        <div class=\"rca-padding\" style={{ textAlign: 'center' }}>\r\n                            {\r\n                                (() => {\r\n                                    let suffix = '';\r\n                                    if (currentInningIndex === 0) {\r\n                                        suffix = 'st';\r\n                                    } else if (currentInningIndex === 1) {\r\n                                        suffix = 'nd';\r\n                                    } else if (currentInningIndex === 2) {\r\n                                        suffix = 'rd';\r\n                                    } else if (currentInningIndex === 3) {\r\n                                        suffix = 'th';\r\n                                    }\r\n                                    return (\r\n                                        <>\r\n                                            <span>{currentInningIndex + 1}'{suffix} Inning </span>\r\n                                        </>\r\n                                    )\r\n                                })()\r\n                            }\r\n                            <span style={{ fontWeight: 'bold' }}>{currentInning.battingTeam} - {currentInning.totalScore}/{currentInning.totalWickets}, </span>\r\n                            <span style={{ fontWeight: 'bold' }}>{currentInning.bowlingTeam} Requires {currentInning.totalScore + 1} Runs in {totalOversPerInning} Overs at Rate {Number(((currentInning.totalScore + 1) / totalOversPerInning).toFixed(2))} Runs Per Over</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        teams: getTeams(state.match),\r\n        tossResult: state.match.details.tossResult,\r\n        matchResult: state.match.details.result,\r\n        currentInningIndex: state.match.currentInningIndex,\r\n        currentInning: getCurrentInning(state.match),\r\n        totalOvers: getTotalOversCount(state.match),\r\n        currentRunRate: getCurrentRunRate(state.match),\r\n        requiredRunRate: getRequiredRunRate(state.match),\r\n        strikerBatsman: getStrikerBatsman(state.match),\r\n        nonStrikerBatsman: getNonStrikerBatsman(state.match),\r\n        currentOver: getCurrentOver(state.match),\r\n        currentBowler: getCurrentBowler(state.match),\r\n        totalOversPerInning: getTotalOversPerInning(state.match),\r\n        fow: state.match.innings[state.match.currentInningIndex].fow\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(CurrentScore)\r\n","import { Dropdown } from 'primereact/dropdown';\r\nimport React, { useContext } from 'react'\r\nimport { BOWLED, CAUGHT_BY, FIELD_OBSTRUCT, HIT_WICKET, LBW, RUN_OUT, STUMPED } from '../constants';\r\nimport { WicketDetailsContext } from './UpdateScore';\r\n\r\nfunction SetWhoOut() {\r\n    const { wicketDetails, dispatchWicketDetails, currentBatsmanOptions } = useContext(WicketDetailsContext)\r\n    return (\r\n        <div className=\"marg-right-10\">\r\n            <div className=\"marg-top-right-bottom-10 equal-width\">Who Out</div>\r\n            <div className=\"equal-width\">\r\n                <Dropdown disabled={!wicketDetails.wicketType || [BOWLED, LBW, HIT_WICKET, STUMPED, CAUGHT_BY].includes(wicketDetails.wicketType)} optionLabel=\"name\" value={wicketDetails.whoOut} options={currentBatsmanOptions} onChange={(e) => dispatchWicketDetails({ type: 'SET_WHO_OUT', payload: e.value })} placeholder=\"Select\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction SetOutByPlayer() {\r\n    const { wicketDetails, dispatchWicketDetails, bowlingTeamPlayersOptions } = useContext(WicketDetailsContext)\r\n    let outByHeading = 'Out By';\r\n    if (wicketDetails.wicketType === RUN_OUT) {\r\n        outByHeading = 'Run Out By'\r\n    } else if (wicketDetails.wicketType === CAUGHT_BY) {\r\n        outByHeading = 'Caught By'\r\n    } else if (wicketDetails.wicketType === STUMPED) {\r\n        outByHeading = 'Stumped By'\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"marg-top-right-bottom-10 equal-width\">{outByHeading}</div>\r\n            <div className=\"equal-width\">\r\n                <Dropdown disabled={!wicketDetails.wicketType || [BOWLED, LBW, HIT_WICKET, FIELD_OBSTRUCT].includes(wicketDetails.wicketType)} optionLabel=\"name\" value={wicketDetails.outByPlayer} options={bowlingTeamPlayersOptions} onChange={(e) => dispatchWicketDetails({ type: 'SET_OUT_BY_PLAYER', payload: e.value })} placeholder=\"Select\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction WicketDetails() {\r\n    return (\r\n        <>\r\n            <SetWhoOut></SetWhoOut>\r\n            <SetOutByPlayer></SetOutByPlayer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default WicketDetails\r\n","import React, { useState, useEffect, useReducer, createContext } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    getNotOutBatsmen,\r\n    getYetToBatOrRetdHurtBatsmen,\r\n    getCurrentBowler,\r\n    getNextPossibleBowlers,\r\n    getNonStrikerBatsman,\r\n    getStrikerBatsman,\r\n    getTotalPlayersPerSide,\r\n    getTotalWickets,\r\n    updateInnings,\r\n    getLastBall,\r\n    getCurrentOver,\r\n    getBowlingTeamPlayers,\r\n    getTotalOversCount,\r\n    getTotalOversPerInning,\r\n    startNextInning,\r\n    setMatchResult,\r\n} from '../redux';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport {\r\n    BOWLED,\r\n    BYES,\r\n    CAUGHT_BY,\r\n    COMPLETE,\r\n    COMPLETED,\r\n    EXTRAS_OPTIONS,\r\n    FIELD_OBSTRUCT,\r\n    HIT_WICKET,\r\n    IN_PROGRESS,\r\n    LBW,\r\n    LEG_BYES,\r\n    NOT_OUT_ON_NON_STRIKE,\r\n    NOT_OUT_ON_STRIKE,\r\n    NO_BALL,\r\n    NO_BALL_OFF_BAT,\r\n    PENALTY_RUNS,\r\n    RUNS_OPTIONS,\r\n    RUN_OUT,\r\n    STUMPED,\r\n    WICKET,\r\n    WICKET_OPTIONS,\r\n    WIDE,\r\n    YET_TO_START\r\n} from '../constants';\r\nimport { Button } from 'primereact/button';\r\nimport { InputNumber } from 'primereact/inputnumber';\r\nimport { getTotalOvers, getUpdatedInningStats, isContinueButtonDisabledForCurrentBall } from '../utils/cricketUtils';\r\nimport { cloneDeep } from '../utils/common';\r\nimport WicketDetails from './WicketDetails';\r\nimport { ToggleButton } from 'primereact/togglebutton';\r\n\r\nconst initialWicketDetailsState = {\r\n    wicketType: null,\r\n    whoOut: null,\r\n    outByPlayer: null\r\n}\r\n\r\nconst wicketDetailsReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'SET_WICKET_TYPE':\r\n            return { ...state, wicketType: action.payload };\r\n        case 'SET_WHO_OUT':\r\n            return { ...state, whoOut: action.payload };\r\n        case 'SET_OUT_BY_PLAYER':\r\n            return { ...state, outByPlayer: action.payload };\r\n        case 'RESET_WICKET_DETAILS_STATE':\r\n            return initialWicketDetailsState\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const WicketDetailsContext = createContext();\r\n\r\nfunction UpdateScore({\r\n    totalPlayersPerSide,\r\n    batsmenYetToBatOrRetdHurt,\r\n    strikerBatsman,\r\n    nonStrikerBatsman,\r\n    batsmenNotOut,\r\n    nextPossibleBowlers,\r\n    currentBowler,\r\n    totalWickets,\r\n    currentInningIndex,\r\n    innings,\r\n    lastBall,\r\n    currentOver,\r\n    bowlingTeamPlayers,\r\n    totalOvers,\r\n    totalOversPerInning,\r\n    matchResult,\r\n    updateInnings,\r\n    startNextInning,\r\n    setMatchResult\r\n}) {\r\n\r\n    const [batsmanOnStrike, setBatsmanOnStrike] = useState(strikerBatsman ? strikerBatsman.name : null);\r\n    const [batsmanOnNonStrike, setBatsmanOnNonStrike] = useState(nonStrikerBatsman ? nonStrikerBatsman.name : null);\r\n    const [wicketDetailsState, dispatchWicketDetails] = useReducer(wicketDetailsReducer, initialWicketDetailsState);\r\n\r\n    const [nextBowler, setNextBowler] = useState(currentBowler);\r\n\r\n    useEffect(() => {\r\n        if (!currentBowler) {\r\n            setNextBowler(null);\r\n        }\r\n    }, [currentBowler]);\r\n\r\n    const [nextBatsman, setNextBatsman] = useState(null);\r\n    const [isCurrentBatsmanOnStrike, setCurrentBatsmanOnStrike] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (lastBall.indexOf(WICKET) > -1 && batsmenNotOut.length && batsmenNotOut.length < 2) {\r\n            if (!isCurrentBatsmanOnStrike) {\r\n                if (nextBatsman) {\r\n                    setBatsmanOnStrike(nextBatsman);\r\n                } else {\r\n                    setBatsmanOnStrike(null);\r\n                }\r\n                if (batsmenNotOut[0].name) {\r\n                    setBatsmanOnNonStrike(batsmenNotOut[0].name)\r\n                }\r\n            } else {\r\n                if (nextBatsman) {\r\n                    setBatsmanOnNonStrike(nextBatsman);\r\n                } else {\r\n                    setBatsmanOnNonStrike(null);\r\n                }\r\n                if (batsmenNotOut[0].name) {\r\n                    setBatsmanOnStrike(batsmenNotOut[0].name)\r\n                }\r\n            }\r\n        }\r\n    }, [isCurrentBatsmanOnStrike, nextBatsman, batsmenNotOut, lastBall]);\r\n\r\n    const [runsOptions, setRunsOptions] = useState(RUNS_OPTIONS);\r\n    const [extrasOptions, setExtraOptions] = useState(EXTRAS_OPTIONS);\r\n    const [wicketOptions, setWicketOptions] = useState(WICKET_OPTIONS)\r\n\r\n    const [runs, setRuns] = useState(0);\r\n\r\n    /* if runs are set and greater than 0, disable invalid wicket options */\r\n    useEffect(() => {\r\n        const newWicketOptions = cloneDeep(WICKET_OPTIONS);\r\n        if (runs && runs > 0) {\r\n            newWicketOptions.map((wicket) => [BOWLED, LBW, CAUGHT_BY, HIT_WICKET, STUMPED].includes(wicket.value) ? wicket.disabled = true : wicket.disabled = false);\r\n            dispatchWicketDetails({ type: 'RESET_WICKET_DETAILS_STATE' });\r\n        };\r\n        setWicketOptions([...newWicketOptions]);\r\n    }, [runs]);\r\n\r\n    const [extra, setExtra] = useState(null);\r\n    /* if set penalty runs equal to 5 and disable other run options */\r\n    useEffect(() => {\r\n        const newRunsOptions = cloneDeep(RUNS_OPTIONS);\r\n        if (extra && extra === PENALTY_RUNS) {\r\n            newRunsOptions.map((run) => [0, 1, 2, 3, 4, 6].includes(run.value) ? run.disabled = true : run.disabled = false);\r\n            dispatchWicketDetails({ type: 'RESET_WICKET_DETAILS_STATE' });\r\n            setRuns(5);\r\n        }\r\n        setRunsOptions([...newRunsOptions]);\r\n    }, [extra]);\r\n\r\n    /* if wicket is set and disable other invalid extra option options */\r\n    useEffect(() => {\r\n        const newExtrasOptions = cloneDeep(EXTRAS_OPTIONS);\r\n        if (wicketDetailsState.wicketType) {\r\n            if ([BOWLED, LBW, CAUGHT_BY].includes(wicketDetailsState.wicketType)) {\r\n                newExtrasOptions.map((extra) => extra.disabled = true);\r\n                setExtra(null);\r\n            } else if (wicketDetailsState.wicketType === STUMPED) {\r\n                newExtrasOptions.map((extra) => (extra.value !== WIDE) ? extra.disabled = true : extra.disabled = false);\r\n                if ([LEG_BYES, BYES, PENALTY_RUNS, NO_BALL, NO_BALL_OFF_BAT].includes(extra)) {\r\n                    setExtra(null);\r\n                }\r\n            }\r\n        }\r\n        setExtraOptions([...newExtrasOptions]);\r\n    }, [wicketDetailsState.wicketType, extra]);\r\n\r\n    useEffect(() => {\r\n        if ([FIELD_OBSTRUCT, RUN_OUT].includes(wicketDetailsState.wicketType)) {\r\n            dispatchWicketDetails({ type: 'SET_WHO_OUT', payload: null });\r\n            dispatchWicketDetails({ type: 'SET_OUT_BY_PLAYER', payload: null });\r\n        }\r\n\r\n        if ([BOWLED, LBW, HIT_WICKET, STUMPED, CAUGHT_BY].includes(wicketDetailsState.wicketType)) {\r\n            dispatchWicketDetails({ type: 'SET_WHO_OUT', payload: batsmanOnStrike });\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [wicketDetailsState.wicketType]);\r\n\r\n    const [currentBall, setCurrentBall] = useState('');\r\n\r\n    useEffect(() => {\r\n        let ball = [];\r\n        if (runs || runs === 0) {\r\n            ball.push(runs);\r\n        }\r\n\r\n        if (extra) {\r\n            ball.push(extra);\r\n        }\r\n\r\n        if (wicketDetailsState.wicketType) {\r\n            if (ball.length) {\r\n                if (!(runs === 0 && ball.length === 1)) {\r\n                    ball.push('+');\r\n                }\r\n            }\r\n            ball.push(WICKET);\r\n            if (runs === 0) {\r\n                ball.splice(0, 1);\r\n            }\r\n        }\r\n        setCurrentBall(ball);\r\n    }, [runs, extra, wicketDetailsState.wicketType]);\r\n\r\n    const batsmenYetToBatOrRetdHurtOptions = batsmenYetToBatOrRetdHurt.map((batsman) => {\r\n        return { name: batsman.name, value: batsman.name }\r\n    });\r\n\r\n    const batsmenNotOutOptions = batsmenNotOut.map((batsman) => {\r\n        return { name: batsman.name, value: batsman.name }\r\n    });\r\n\r\n    const nextPossibleBowlersOptions = nextPossibleBowlers.map((bowler) => {\r\n        return { name: bowler.name, value: bowler.name }\r\n    });\r\n\r\n    const bowlingTeamPlayersOptions = bowlingTeamPlayers.map((player) => {\r\n        return { name: player, value: player }\r\n    });\r\n\r\n    const currentBatsmanOptions = [batsmanOnStrike, batsmanOnNonStrike].map((player) => {\r\n        return { name: player, value: player }\r\n    });\r\n\r\n    const resetBall = () => {\r\n        dispatchWicketDetails({ type: 'RESET_WICKET_DETAILS_STATE' });\r\n        setRuns(null);\r\n        setExtra(null);\r\n    }\r\n\r\n    const saveBall = () => {\r\n        innings[currentInningIndex] = {\r\n            ...innings[currentInningIndex],\r\n            ...getUpdatedInningStats(innings[currentInningIndex], currentBall, strikerBatsman, nonStrikerBatsman, currentBowler, wicketDetailsState)\r\n        }\r\n\r\n        const getMatchResult = () => {\r\n            let matchResult;\r\n            if (innings[currentInningIndex].target) {\r\n                if (innings[currentInningIndex].totalScore >= innings[currentInningIndex].target) {\r\n                    matchResult = `Match Result - ${innings[currentInningIndex].battingTeam} Won By ${innings[currentInningIndex].batsmen.length - 1 - innings[currentInningIndex].totalWickets} Wickets`\r\n                    innings[currentInningIndex].status = COMPLETED;\r\n                } else if (innings[currentInningIndex].status === COMPLETED) {\r\n                    if (innings[currentInningIndex].totalScore === innings[currentInningIndex].target - 1) {\r\n                        matchResult = 'Match Result - Tied';\r\n                    } else {\r\n                        matchResult = `Match Result - ${innings[currentInningIndex].bowlingTeam} Won By ${innings[currentInningIndex].target - innings[currentInningIndex].totalScore - 1} Runs`;\r\n                    }\r\n                }\r\n            }\r\n            return matchResult;\r\n        }\r\n\r\n        if ((innings[currentInningIndex].totalWickets === innings[currentInningIndex].batsmen.length - 1) || getTotalOvers(innings[currentInningIndex].overs) === totalOversPerInning) {\r\n            innings[currentInningIndex].status = COMPLETED;\r\n            if (innings[currentInningIndex + 1]) {\r\n                innings[currentInningIndex + 1].target = innings[currentInningIndex].totalScore + 1\r\n            }\r\n        }\r\n        setMatchResult(getMatchResult());\r\n        updateInnings(innings);\r\n        resetBall();\r\n    }\r\n\r\n    const CurrentBallDetails = () => {\r\n        if (currentBowler && totalWickets < totalPlayersPerSide - 1 && currentOver.status === IN_PROGRESS && !(batsmenNotOut.length < 2)) {\r\n            return (\r\n                <>\r\n                    <div className=\"marg-bottom-10\" style={{ display: 'inline-flex' }}>\r\n                        <div className=\"marg-right-10\" >\r\n                            <div className=\"marg-top-right-bottom-10 equal-width\">Runs</div>\r\n                            <div className=\"equal-width\">\r\n                                <Dropdown optionLabel=\"label\" value={runs} options={runsOptions} onChange={(e) => setRuns(e.value)} placeholder=\"Select\" />\r\n                                <InputNumber disabled={extra === PENALTY_RUNS} className=\"marg-left-10\" value={runs} onValueChange={(e) => setRuns(e.value)} mode=\"decimal\" min={0} max={100} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"marg-right-10\" >\r\n                            <div className=\"marg-top-right-bottom-10 equal-width\">Extras</div>\r\n                            <div className=\"equal-width\">\r\n                                <Dropdown optionLabel=\"label\" value={extra} options={extrasOptions} onChange={(e) => setExtra(e.value)} placeholder=\"Select\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"marg-right-10\" >\r\n                            <div className=\"marg-top-right-bottom-10 equal-width\">Wicket</div>\r\n                            <div className=\"equal-width\">\r\n                                <Dropdown optionLabel=\"label\" value={wicketDetailsState.wicketType} options={wicketOptions} onChange={(e) => dispatchWicketDetails({ type: 'SET_WICKET_TYPE', payload: e.value })} placeholder=\"Select\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"marg-right-10\" style={{ display: 'inherit' }} >\r\n                            <WicketDetailsContext.Provider value={{ wicketDetails: wicketDetailsState, dispatchWicketDetails: dispatchWicketDetails, currentBatsmanOptions: currentBatsmanOptions, bowlingTeamPlayersOptions: bowlingTeamPlayersOptions }}>\r\n                                <WicketDetails></WicketDetails>\r\n                            </WicketDetailsContext.Provider>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ \"textAlignLast\": \"center\" }}>\r\n                        <Button style={{ \"marginRight\": \"10px\" }} type=\"button\" label=\"Reset Ball\" onClick={() => resetBall()} />\r\n                        <Button type=\"button\" disabled={isContinueButtonDisabledForCurrentBall(runs, extra, wicketDetailsState.wicketType, wicketDetailsState.whoOut, wicketDetailsState.outByPlayer)} label=\"Save Ball\" onClick={() => saveBall()} />\r\n                    </div>\r\n                </>\r\n            )\r\n        }\r\n        return <></>;\r\n    }\r\n\r\n    const continueMatch = () => {\r\n        if (batsmenYetToBatOrRetdHurt.length === totalPlayersPerSide || (lastBall.indexOf(WICKET) > -1)) {\r\n            const strikerIndex = innings[currentInningIndex].batsmen.findIndex((batsman) => batsman.name === batsmanOnStrike);\r\n            if (strikerIndex > -1) {\r\n                innings[currentInningIndex].batsmen[strikerIndex] = {\r\n                    ...innings[currentInningIndex].batsmen[strikerIndex],\r\n                    status: NOT_OUT_ON_STRIKE,\r\n                    order: batsmenYetToBatOrRetdHurt.length === totalPlayersPerSide ? 1 : (innings[currentInningIndex].batsmen[strikerIndex].order ? innings[currentInningIndex].batsmen[strikerIndex].order : totalWickets + 2)\r\n                }\r\n            }\r\n\r\n            const nonStrikerIndex = innings[currentInningIndex].batsmen.findIndex((batsman) => batsman.name === batsmanOnNonStrike);\r\n            if (nonStrikerIndex > -1) {\r\n                innings[currentInningIndex].batsmen[nonStrikerIndex] = {\r\n                    ...innings[currentInningIndex].batsmen[nonStrikerIndex],\r\n                    status: NOT_OUT_ON_NON_STRIKE,\r\n                    order: batsmenYetToBatOrRetdHurt.length === totalPlayersPerSide ? 2 : (innings[currentInningIndex].batsmen[nonStrikerIndex].order ? innings[currentInningIndex].batsmen[nonStrikerIndex].order : totalWickets + 2)\r\n                }\r\n            }\r\n\r\n            if (innings[currentInningIndex].partnerships) {\r\n                innings[currentInningIndex].partnerships = [\r\n                    ...innings[currentInningIndex].partnerships,\r\n                    {\r\n                        [innings[currentInningIndex].batsmen[strikerIndex].name]: {\r\n                            runsScored: 0,\r\n                            ballsFaced: 0\r\n                        },\r\n                        [innings[currentInningIndex].batsmen[nonStrikerIndex].name]: {\r\n                            runsScored: 0,\r\n                            ballsFaced: 0\r\n                        }\r\n                    }\r\n                ]\r\n            } else {\r\n                innings[currentInningIndex].partnerships = [\r\n                    {\r\n                        [innings[currentInningIndex].batsmen[strikerIndex].name]: {\r\n                            runsScored: 0,\r\n                            ballsFaced: 0,\r\n                        },\r\n                        [innings[currentInningIndex].batsmen[nonStrikerIndex].name]: {\r\n                            runsScored: 0,\r\n                            ballsFaced: 0\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n        if (!currentOver || currentOver.status === COMPLETE) {\r\n            let index = innings[currentInningIndex].bowlers.findIndex((bowler) => bowler.name === nextBowler);\r\n            if (index > -1) {\r\n                innings[currentInningIndex].overs.push({\r\n                    details: [],\r\n                    bowlerName: nextBowler,\r\n                    status: IN_PROGRESS,\r\n                    totalRunsInThisOver: 0\r\n                });\r\n            }\r\n        }\r\n        innings[currentInningIndex].status = IN_PROGRESS;\r\n        updateInnings(innings);\r\n    }\r\n\r\n    const ChooseBatsmanAndBowler = () => {\r\n        let batsmanBowlerJsx = [];\r\n        if (batsmenYetToBatOrRetdHurt.length === totalPlayersPerSide) {\r\n            batsmanBowlerJsx.push(\r\n                <div key={batsmanBowlerJsx.length} className=\"marg-bottom-10\" style={{ display: 'inline-flex' }} >\r\n                    {/* Choose New Batsmen */}\r\n                    <div className=\"marg-right-10\">\r\n                        <div className=\"marg-top-right-bottom-10 equal-width\" >On Strike End</div>\r\n                        <Dropdown className=\"equal-width\" optionLabel=\"name\" value={batsmanOnStrike} options={batsmenYetToBatOrRetdHurtOptions} onChange={(e) => setBatsmanOnStrike(e.value)} placeholder=\"Select\" />\r\n                    </div>\r\n                    <div className=\"marg-right-10\">\r\n                        <div className=\"marg-top-right-bottom-10 equal-width\" >On Non Strike End</div>\r\n                        <Dropdown className=\"equal-width\" optionLabel=\"name\" value={batsmanOnNonStrike} options={batsmenYetToBatOrRetdHurtOptions} onChange={(e) => setBatsmanOnNonStrike(e.value)} placeholder=\"Select\" />\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else if (totalWickets < totalPlayersPerSide - 1 && lastBall.indexOf(WICKET) > -1 && batsmenNotOut.length < 2) {\r\n            batsmanBowlerJsx.push(\r\n                <div key={batsmanBowlerJsx.length} className=\"marg-bottom-10\" style={{ display: 'inline-flex' }}>\r\n                    {/* Choose Batsman after wicket gone */}\r\n                    <div className=\"marg-right-10\" >\r\n                        <div className=\"marg-top-right-bottom-10 equal-width\">Current Batsman</div>\r\n                        <div className=\"equal-width\">\r\n                            <Dropdown optionLabel=\"name\" value={batsmenNotOut[0].name} options={batsmenNotOutOptions} onChange={(e) => setBatsmanOnStrike(e.value)} placeholder=\"Select\" />\r\n                            <ToggleButton style={{ marginLeft: \"10px\" }} checked={isCurrentBatsmanOnStrike} onChange={(e) => setCurrentBatsmanOnStrike(e.value)} onLabel=\"On Strike\" offLabel=\"On Non Strike\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"marg-right-10\">\r\n                        <div className=\"marg-top-right-bottom-10\">Next Batsman</div>\r\n                        <div className=\"equal-width\">\r\n                            <Dropdown optionLabel=\"name\" value={nextBatsman} options={batsmenYetToBatOrRetdHurtOptions} onChange={(e) => setNextBatsman(e.value)} placeholder=\"Select\" />\r\n                            <ToggleButton style={{ marginLeft: \"10px\" }} checked={!isCurrentBatsmanOnStrike} onChange={(e) => setCurrentBatsmanOnStrike(!e.value)} onIcon=\"pi pi-check\" onLabel=\"On Strike\" offLabel=\"On Non Strike\" offIcon=\"pi pi-times\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        if ((!currentBowler || currentOver.status === COMPLETE) && totalOvers < totalOversPerInning) {\r\n            batsmanBowlerJsx.push(\r\n                <div key={batsmanBowlerJsx.length} className=\"marg-bottom-10\" style={{ display: 'inline-flex' }}>\r\n                    <div className=\"marg-right-10\">\r\n                        <div className=\"marg-top-right-bottom-10 equal-width\">Choose Bowler</div>\r\n                        <Dropdown className=\"equal-width\" optionLabel=\"name\" value={nextBowler} options={nextPossibleBowlersOptions} onChange={(e) => setNextBowler(e.value)} placeholder=\"Select\" />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        if (batsmanBowlerJsx.length) {\r\n            batsmanBowlerJsx.push(\r\n                <div key={batsmanBowlerJsx.length} style={{ textAlign: 'center' }}>\r\n                    <Button type=\"button\" disabled={(!batsmanOnStrike || !batsmanOnNonStrike || !nextBowler) || (batsmanOnStrike === batsmanOnNonStrike)} label=\"Continue\" onClick={() => continueMatch()} />\r\n                </div>\r\n            );\r\n        }\r\n        return batsmanBowlerJsx;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"rca-container\">\r\n                <div className=\"rca-column-12\">\r\n                    <div className=\"rca-medium-widget rca-padding min-ht-unset pad-top-10 rca-top-border\">\r\n                        {\r\n                            (() => {\r\n                                if (matchResult) {\r\n                                    return (\r\n                                        <div style={{ fontSize: '30px', padding: '10px', textAlign: 'center' }}>\r\n                                            Match Ended\r\n                                        </div>\r\n                                    )\r\n                                } else if (((totalOvers < totalOversPerInning) || innings[currentInningIndex].status === YET_TO_START) && (totalWickets !== totalPlayersPerSide - 1)) {\r\n                                    return (\r\n                                        <>\r\n                                            <ChooseBatsmanAndBowler></ChooseBatsmanAndBowler>\r\n                                            <CurrentBallDetails></CurrentBallDetails>\r\n                                        </>\r\n                                    )\r\n                                } else if (!matchResult) {\r\n                                    return (\r\n                                        <>\r\n                                            <div style={{ textAlign: 'center' }}>\r\n                                                <Button type=\"button\" label=\"Start Next Inning\" onClick={() => startNextInning()} />\r\n                                            </div>\r\n                                        </>\r\n                                    )\r\n                                }\r\n                            })()\r\n                        }\r\n                    </div>\r\n                </div >\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        totalPlayersPerSide: getTotalPlayersPerSide(state.match),\r\n        innings: state.match.innings,\r\n        currentInningIndex: state.match.currentInningIndex,\r\n        batsmenYetToBatOrRetdHurt: getYetToBatOrRetdHurtBatsmen(state.match),\r\n        batsmenNotOut: getNotOutBatsmen(state.match),\r\n        strikerBatsman: getStrikerBatsman(state.match),\r\n        nonStrikerBatsman: getNonStrikerBatsman(state.match),\r\n        nextPossibleBowlers: getNextPossibleBowlers(state.match),\r\n        currentBowler: getCurrentBowler(state.match),\r\n        totalWickets: getTotalWickets(state.match),\r\n        lastBall: getLastBall(state.match),\r\n        currentOver: getCurrentOver(state.match),\r\n        bowlingTeamPlayers: getBowlingTeamPlayers(state.match),\r\n        totalOvers: getTotalOversCount(state.match),\r\n        totalOversPerInning: getTotalOversPerInning(state.match),\r\n        matchResult: state.match.details.result\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateInnings: (innings) => dispatch(updateInnings(innings)),\r\n        startNextInning: () => dispatch(startNextInning()),\r\n        setMatchResult: (matchResult) => dispatch(setMatchResult(matchResult))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateScore);\r\n","import React, { useState } from 'react'\r\nimport FullScorecard from './components/FullScorecard';\r\nimport MatchDetails from './components/MatchDetails';\r\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getLiveScore } from './redux';\r\nimport CurrentScore from './components/CurrentScore';\r\nimport UpdateScore from './components/UpdateScore';\r\nimport { Sidebar } from 'primereact/sidebar';\r\nimport { Button } from 'primereact/button';\r\n\r\nfunction App({ liveScore }) {\r\n    const [visibleBottom, setVisibleBottom] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"rca-container\">\r\n                <div className=\"rca-row\">\r\n                    <div className=\"rca-column-12\">\r\n                        <div className=\"rca-logo\">\r\n                            <h2>\r\n                                <span><img src=\"src/images/logo-01.png\" style={{ width: \"50px\" }} alt=\"\" /></span><span>Cricket Scorer</span>\r\n                            </h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"rca-row\">\r\n                    <div className=\"rca-column-12\">\r\n                        <div className=\"rca-mini-widget rca-tab-simple\">\r\n                            <div id=\"rtab-1\" className=\"rca-padding\">\r\n                                <div className=\"rca-column-12\">\r\n                                    <div className=\"rca-blog-content\">\r\n                                        <div className=\"rca-padding\">\r\n                                            <Router>\r\n                                                <div>\r\n                                                    <Switch>\r\n                                                        <Route exact path=\"/\" component={MatchDetails} />\r\n                                                        <Route path=\"/full-scorecard\" component={FullScorecard} />\r\n                                                        <Route component={MatchDetails} />\r\n                                                    </Switch>\r\n                                                </div>\r\n                                            </Router>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"rca-clear\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    (() => {\r\n                        if (liveScore !== '') {\r\n                            return (\r\n                                <>\r\n                                    <CurrentScore></CurrentScore>\r\n                                    <div style={{ position: 'fixed', top: '90.7%', right: '2%' }}>\r\n                                        <Button icon=\"pi pi-pencil\" title=\"Update Inning\" onClick={() => setVisibleBottom(true)} className=\"p-mr-2\"></Button>\r\n                                    </div>\r\n                                    <Sidebar visible={visibleBottom} position=\"bottom\" onHide={() => setVisibleBottom(false)}>\r\n                                        <UpdateScore></UpdateScore>\r\n                                    </Sidebar>\r\n                                </>\r\n                            )\r\n                        }\r\n                        return <></>;\r\n                    })()\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        liveScore: getLiveScore(state.match)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport matchReducer from './redux';\r\n\r\nexport const store = createStore(combineReducers({\r\n    match: matchReducer\r\n}), composeWithDevTools())\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'primereact/resources/themes/saga-blue/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primeflex/primeflex.css';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './configureStore';\r\nimport './css/index.scss';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}